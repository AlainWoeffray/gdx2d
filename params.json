{"name":"Gdx2d","tagline":"A simple to use Java library to make 2d games (based on Libgdx) for desktop and Android","body":"﻿## What is gdx2d ? [![Build Status](https://travis-ci.org/hevs-isi/gdx2d.svg?branch=master)](https://travis-ci.org/hevs-isi/gdx2d)\r\n \r\n*gdx2d* is a simple to use 2d game and graphics framework. It is multi-platform (working on Windows, Linux and Android). It is Java based with the heavy-lifting done in native code (i.e. C/C++), for example for physics rendering. Here is an example of what the library is capable of (or you can check the [YouTube demo reel](http://www.youtube.com/watch?v=eoVrifa1Xd0)):\r\n\r\n![Screen shot](https://raw.github.com/wiki/pmudry/gdx2d/multi_screenshot.png)\r\n\r\n## Why this framework?\r\nThe advantage of using *gdx2d* is that you can develop your code in Java on your standard desktop computer like any other Java application and then deploy the same code, with a single click, on an Android phone or tablet. Of course, you have to take into consideration the fact that some of your code is a bit different for Android (for instance, you do not have accelerometers on your PC). \r\n\r\nThe library itself is a wrapper around a very very nice library called [libgdx](http://www.libgdx.com/) which provides almost everything to the library.\r\n\r\n## Documentation\r\nThe Javadoc API of the library can be found [here](http://hevs-isi.github.io/gdx2d/javadoc/1.0.0/)\r\n\r\n## What do I get?\r\nIt is multi-platform so that you can run your code on desktop computers (running either Windows, Linux or Mac) but also on mobile devices running Android. It is based on ´libgdx´ but provides a much simpler interface and multiple demo programs to get started.\r\n\r\nUsing the framework, the following code displays a shrinking/growing circle running smoothly:\r\n\r\n```java\r\npackage hevs.gdx2d.demos.simple;\r\n\r\nimport com.badlogic.gdx.graphics.Color;\r\nimport hevs.gdx2d.lib.GdxGraphics;\r\nimport hevs.gdx2d.lib.PortableApplication;\r\n\r\n/**\r\n * A very simple demonstration on how to display something animated with the library\r\n * @author Pierre-André Mudry (mui)\r\n */\r\npublic class DemoSimpleAnimation extends PortableApplication {\r\n\tint radius = 5, speed = 1;\r\n\t\r\n\tpublic DemoSimpleAnimation(boolean onAndroid) {\r\n\t\tsuper(onAndroid);\r\n\t}\r\n\r\n\tpublic void onInit() {\r\n\t\t// Sets the window title\r\n\t\tsetTitle(\"Simple demo, mui 2013\");\r\n\t}\r\n\r\n\tpublic void onGraphicRender(GdxGraphics g) {\t\t\r\n\t\t\r\n\t\t// Clears the screen\r\n\t\tg.clear();\r\n\t\tg.drawFilledCircle(g.getScreenWidth()/2, g.getScreenHeight()/2, radius, Color.BLUE);\t\t\r\n\r\n\t\t// Update the circle radius\r\n\t\tif (radius >= 50|| radius <= 3)\r\n\t\t\tspeed *= -1;\r\n\r\n\t\tradius += speed;\r\n\t\t\r\n\t\tg.drawSchoolLogo();\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t/**\r\n\t\t * Note that the constructor parameter is used to determine if running on Android or not.\r\n\t\t * As we are in main there, it means we are on desktop computer.\r\n\t\t */\r\n\t\tnew DemoSimpleAnimation(false);\r\n\t}\r\n}\r\n```\r\n\r\n## Who did this and why?\r\nIt was developped for the [inf1 course](http://inf1.begincoding.net) taught at [HES-SO Valais / Systems engineering](http://www.hevs.ch) by Pierre-André Mudry. The framework was written P.-A. Mudry & N. Chatton with the help of C. Métrailler.\r\n\r\n## Installing the code\r\nThe library consists of two Eclipse projects (one for Android, one for desktop) that can be imported easily. Once downloaded, an archive can be imported in Eclipse using `File->Import->Existing project into workspace`. You can then either give the path of the archive or extract the data manually and then point to that directory.\r\n\r\n`gdx2d-desktop`\r\n\r\nThis project contains the library as well as all the demo programs. All the demos can be run on PC or on Android. In order to run a demo, either use the `DemoSelector` class which provides a simple way to choose which demo to run or run each demo individually.\r\n\r\n`gdx2d-android`\r\n\r\nThis is the Android counterpart of the library. This project depends on the gdx2d-desktop project, which means that this other project must be available in Eclipse. In addition, most of the files that will be executed come from that project as well. As such, it mainly consists of a Java file GameActivity.java which determines which is the main program that will be launched on Android.\r\n\r\n## License\r\nThe content of this project itself is licensed under the [Creative Commons CC BY-NC 4.0 license](http://creativecommons.org/licenses/by-nc/4.0/), and the underlying source code used to format and display that content is licensed under the [Apache 2.0 license](http://www.apache.org/licenses/LICENSE-2.0).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}