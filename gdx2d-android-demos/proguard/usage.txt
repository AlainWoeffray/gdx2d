android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs
android.support.v4.app.ActionBarDrawerToggle
android.support.v4.app.ActionBarDrawerToggle$1
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
android.support.v4.app.ActivityCompat
android.support.v4.app.ActivityCompatHoneycomb:
    27:27:ActivityCompatHoneycomb()
    34:35:static void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.ActivityCompatJB
android.support.v4.app.ActivityOptionsCompat
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB
android.support.v4.app.ActivityOptionsCompatJB
android.support.v4.app.BackStackRecord:
    static final java.lang.String TAG
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    338:338:public int getId()
    342:342:public int getBreadCrumbTitleRes()
    346:346:public int getBreadCrumbShortTitleRes()
    350:353:public java.lang.CharSequence getBreadCrumbTitle()
    357:360:public java.lang.CharSequence getBreadCrumbShortTitle()
    379:380:public android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)
    384:385:public android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)
    421:421:public android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)
    425:430:public android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)
    434:439:public android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)
    443:448:public android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment)
    452:457:public android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment)
    479:479:public android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)
    484:488:public android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    492:493:public android.support.v4.app.FragmentTransaction setTransition(int)
    497:498:public android.support.v4.app.FragmentTransaction setTransitionStyle(int)
    502:508:public android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)
    512:512:public boolean isAddToBackStackAllowed()
    516:521:public android.support.v4.app.FragmentTransaction disallowAddToBackStack()
    525:527:public android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int)
    531:533:public android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    537:539:public android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int)
    543:545:public android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    578:578:public int commitAllowingStateLoss()
    779:779:public int getTransition()
    783:783:public int getTransitionStyle()
    787:787:public boolean isEmpty()
android.support.v4.app.DialogFragment
android.support.v4.app.Fragment:
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STOPPED
    static final int STARTED
    static final int RESUMED
    481:481:public final int getId()
    488:488:public final java.lang.String getTag()
    499:503:public void setArguments(android.os.Bundle)
    510:510:public final android.os.Bundle getArguments()
    522:527:public void setInitialSavedState(android.support.v4.app.Fragment$SavedState)
    541:543:public void setTargetFragment(android.support.v4.app.Fragment,int)
    549:549:public final android.support.v4.app.Fragment getTargetFragment()
    556:556:public final int getTargetRequestCode()
    583:583:public final java.lang.CharSequence getText(int)
    593:593:public final java.lang.String getString(int)
    606:606:public final varargs java.lang.String getString(int,java.lang.Object[])
    620:620:public final android.support.v4.app.FragmentManager getFragmentManager()
    628:640:public final android.support.v4.app.FragmentManager getChildFragmentManager()
    648:648:public final android.support.v4.app.Fragment getParentFragment()
    655:655:public final boolean isAdded()
    673:673:public final boolean isRemoving()
    684:684:public final boolean isInLayout()
    692:692:public final boolean isResumed()
    701:701:public final boolean isVisible()
    713:713:public final boolean isHidden()
    741:746:public void setRetainInstance(boolean)
    749:749:public final boolean getRetainInstance()
    760:766:public void setHasOptionsMenu(boolean)
    778:784:public void setMenuVisibility(boolean)
    800:805:public void setUserVisibleHint(boolean)
    812:812:public boolean getUserVisibleHint()
    819:827:public android.support.v4.app.LoaderManager getLoaderManager()
    835:839:public void startActivity(android.content.Intent)
    846:850:public void startActivityForResult(android.content.Intent,int)
    1001:1001:public android.view.View getView()
    1288:1289:public void registerForContextMenu(android.view.View)
    1299:1300:public void unregisterForContextMenu(android.view.View)
    1410:1416:android.support.v4.app.Fragment findFragmentByWho(java.lang.String)
android.support.v4.app.Fragment$SavedState:
    301:303:Fragment$SavedState(android.os.Bundle)
android.support.v4.app.FragmentActivity:
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    private static final int HONEYCOMB
    static final int MSG_REALLY_STOPPED
    static final int MSG_RESUME_PENDING
    70:129:public FragmentActivity()
    612:614:public java.lang.Object getLastCustomNonConfigurationInstance()
    805:805:public android.support.v4.app.FragmentManager getSupportFragmentManager()
    825:833:public void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
    854:859:public android.support.v4.app.LoaderManager getSupportLoaderManager()
android.support.v4.app.FragmentActivity$1
android.support.v4.app.FragmentActivity$2
android.support.v4.app.FragmentActivity$FragmentTag:
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
    129:129:FragmentActivity$FragmentTag()
android.support.v4.app.FragmentManager:
    public static final int POP_BACK_STACK_INCLUSIVE
    139:139:public android.support.v4.app.FragmentTransaction openTransaction()
    public abstract android.support.v4.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract boolean popBackStackImmediate()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract void popBackStack(int,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
    public abstract android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment)
    public abstract void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    334:335:public static void enableDebugLogging(boolean)
android.support.v4.app.FragmentManager$BackStackEntry
android.support.v4.app.FragmentManagerImpl:
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
    466:471:public void popBackStack()
    482:487:public void popBackStack(java.lang.String,int)
    491:493:public boolean popBackStackImmediate(java.lang.String,int)
    498:506:public void popBackStack(int,int)
    510:515:public boolean popBackStackImmediate(int,int)
    520:520:public int getBackStackEntryCount()
    525:525:public android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    530:534:public void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
    538:541:public void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
    572:580:public android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment)
    1314:1322:public android.support.v4.app.Fragment findFragmentByWho(java.lang.String)
android.support.v4.app.FragmentManagerImpl$2
android.support.v4.app.FragmentManagerImpl$3
android.support.v4.app.FragmentManagerImpl$4
android.support.v4.app.FragmentPagerAdapter
android.support.v4.app.FragmentStatePagerAdapter
android.support.v4.app.FragmentTabHost:
    private android.widget.FrameLayout mRealTabContent
    130:132:public FragmentTabHost(android.content.Context)
    135:137:public FragmentTabHost(android.content.Context,android.util.AttributeSet)
    140:172:private void initFragmentTabHost(android.content.Context,android.util.AttributeSet)
    186:190:public void setup(android.content.Context,android.support.v4.app.FragmentManager)
    193:205:public void setup(android.content.Context,android.support.v4.app.FragmentManager,int)
    208:215:private void ensureContent()
    223:242:public void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
android.support.v4.app.FragmentTabHost$DummyTabFactory
android.support.v4.app.FragmentTabHost$TabInfo:
    67:71:FragmentTabHost$TabInfo(java.lang.String,java.lang.Class,android.os.Bundle)
android.support.v4.app.FragmentTransaction:
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
    public abstract android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)
    public abstract android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)
    public abstract android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)
    public abstract android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)
    public abstract android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)
    public abstract android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment)
    public abstract android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment)
    public abstract boolean isEmpty()
    public abstract android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)
    public abstract android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public abstract android.support.v4.app.FragmentTransaction setTransition(int)
    public abstract android.support.v4.app.FragmentTransaction setTransitionStyle(int)
    public abstract android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)
    public abstract boolean isAddToBackStackAllowed()
    public abstract android.support.v4.app.FragmentTransaction disallowAddToBackStack()
    public abstract android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int)
    public abstract android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public abstract android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public abstract android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public abstract int commitAllowingStateLoss()
android.support.v4.app.ListFragment
android.support.v4.app.ListFragment$1
android.support.v4.app.ListFragment$2
android.support.v4.app.LoaderManager:
    public abstract android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    public abstract android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract android.support.v4.content.Loader getLoader(int)
    public abstract void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    177:178:public static void enableDebugLogging(boolean)
android.support.v4.app.LoaderManagerImpl:
    static final java.lang.String TAG
    boolean mRetainingStarted
    boolean mCreatingLoader
    489:492:private android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    498:503:private android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    508:515:void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)
    543:565:public android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    593:647:public android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    658:678:public void destroyLoader(int)
    686:697:public android.support.v4.content.Loader getLoader(int)
android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    228:232:public LoaderManagerImpl$LoaderInfo(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
    362:415:public void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.app.NavUtils
android.support.v4.app.NavUtils$NavUtilsImpl
android.support.v4.app.NavUtils$NavUtilsImplBase
android.support.v4.app.NavUtils$NavUtilsImplJB
android.support.v4.app.NavUtilsJB
android.support.v4.app.NotificationCompat
android.support.v4.app.NotificationCompat$Action
android.support.v4.app.NotificationCompat$BigPictureStyle
android.support.v4.app.NotificationCompat$BigTextStyle
android.support.v4.app.NotificationCompat$Builder
android.support.v4.app.NotificationCompat$InboxStyle
android.support.v4.app.NotificationCompat$NotificationCompatImpl
android.support.v4.app.NotificationCompat$NotificationCompatImplBase
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean
android.support.v4.app.NotificationCompat$Style
android.support.v4.app.NotificationCompatHoneycomb
android.support.v4.app.NotificationCompatIceCreamSandwich
android.support.v4.app.NotificationCompatJellybean
android.support.v4.app.ServiceCompat
android.support.v4.app.ShareCompat
android.support.v4.app.ShareCompat$IntentBuilder
android.support.v4.app.ShareCompat$IntentReader
android.support.v4.app.ShareCompat$ShareCompatImpl
android.support.v4.app.ShareCompat$ShareCompatImplBase
android.support.v4.app.ShareCompat$ShareCompatImplICS
android.support.v4.app.ShareCompat$ShareCompatImplJB
android.support.v4.app.ShareCompatICS
android.support.v4.app.ShareCompatJB
android.support.v4.app.TaskStackBuilder
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
android.support.v4.app.TaskStackBuilderHoneycomb
android.support.v4.app.TaskStackBuilderJellybean
android.support.v4.content.AsyncTaskLoader
android.support.v4.content.AsyncTaskLoader$LoadTask
android.support.v4.content.ContextCompat
android.support.v4.content.ContextCompatHoneycomb
android.support.v4.content.ContextCompatJellybean
android.support.v4.content.CursorLoader
android.support.v4.content.FileProvider
android.support.v4.content.FileProvider$PathStrategy
android.support.v4.content.FileProvider$SimplePathStrategy
android.support.v4.content.IntentCompat
android.support.v4.content.IntentCompat$IntentCompatImpl
android.support.v4.content.IntentCompat$IntentCompatImplBase
android.support.v4.content.IntentCompat$IntentCompatImplHC
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1
android.support.v4.content.IntentCompatHoneycomb
android.support.v4.content.IntentCompatIcsMr1
android.support.v4.content.Loader:
    android.content.Context mContext
    90:92:public Loader(android.content.Context)
    102:105:public void deliverResult(java.lang.Object)
    111:111:public android.content.Context getContext()
    118:118:public int getId()
    157:157:public boolean isStarted()
    166:166:public boolean isAbandoned()
    175:175:public boolean isReset()
    217:218:public void forceLoad()
    225:225:protected void onForceLoad()
    261:263:public void abandon()
    275:275:protected void onAbandon()
    312:314:public boolean takeContentChanged()
    326:334:public void onContentChanged()
android.support.v4.content.Loader$ForceLoadContentObserver
android.support.v4.content.Loader$OnLoadCompleteListener:
    public abstract void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
android.support.v4.content.LocalBroadcastManager
android.support.v4.content.LocalBroadcastManager$1
android.support.v4.content.LocalBroadcastManager$BroadcastRecord
android.support.v4.content.LocalBroadcastManager$ReceiverRecord
android.support.v4.content.ModernAsyncTask
android.support.v4.content.ModernAsyncTask$1
android.support.v4.content.ModernAsyncTask$2
android.support.v4.content.ModernAsyncTask$3
android.support.v4.content.ModernAsyncTask$4
android.support.v4.content.ModernAsyncTask$AsyncTaskResult
android.support.v4.content.ModernAsyncTask$InternalHandler
android.support.v4.content.ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$WorkerRunnable
android.support.v4.content.pm.ActivityInfoCompat
android.support.v4.database.DatabaseUtilsCompat
android.support.v4.net.ConnectivityManagerCompat
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl
android.support.v4.net.ConnectivityManagerCompatGingerbread
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2
android.support.v4.net.ConnectivityManagerCompatJellyBean
android.support.v4.net.TrafficStatsCompat
android.support.v4.net.TrafficStatsCompat$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl
android.support.v4.net.TrafficStatsCompatIcs
android.support.v4.os.ParcelableCompat:
    26:42:public ParcelableCompat()
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    22:22:ParcelableCompatCreatorHoneycombMR2Stub()
android.support.v4.util.AtomicFile
android.support.v4.util.DebugUtils:
    25:25:public DebugUtils()
android.support.v4.util.LongSparseArray
android.support.v4.util.LruCache
android.support.v4.util.SparseArrayCompat:
    52:52:public java.lang.Object get(int)
    60:65:public java.lang.Object get(int,java.lang.Object)
    73:81:public void delete(int)
    87:88:public void remove(int)
    94:98:public void removeAt(int)
    107:111:public void removeAtRange(int,int)
    146:190:public void put(int,java.lang.Object)
    236:241:public void setValueAt(int,java.lang.Object)
    249:253:public int indexOfKey(int)
    265:273:public int indexOfValue(java.lang.Object)
    296:323:public void append(int,java.lang.Object)
    326:342:private static int binarySearch(int[],int,int,int)
android.support.v4.util.TimeUtils
android.support.v4.view.AccessibilityDelegateCompat
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl
android.support.v4.view.AccessibilityDelegateCompatIcs
android.support.v4.view.AccessibilityDelegateCompatIcs$1
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge
android.support.v4.view.AccessibilityDelegateCompatJellyBean
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean
android.support.v4.view.GestureDetectorCompat
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
android.support.v4.view.GravityCompat:
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
    27:62:public GravityCompat()
    132:133:public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    162:163:public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    186:187:public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
android.support.v4.view.GravityCompat$GravityCompatImpl:
    public abstract void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    public abstract void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public abstract void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
android.support.v4.view.GravityCompat$GravityCompatImplBase:
    46:47:public void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    52:53:public void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    58:59:public void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    71:72:public void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    77:79:public void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    83:84:public void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
android.support.v4.view.GravityCompatJellybeanMr1:
    23:23:GravityCompatJellybeanMr1()
    31:32:public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    36:37:public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    40:41:public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
android.support.v4.view.KeyEventCompat:
    25:118:public KeyEventCompat()
    150:150:public static int normalizeMetaState(int)
    154:154:public static boolean metaStateHasModifiers(int,int)
    158:158:public static boolean metaStateHasNoModifiers(int)
    174:174:public static boolean isTracking(android.view.KeyEvent)
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    private static final int META_MODIFIER_MASK
    private static final int META_ALL_MASK
    99:99:public boolean isTracking(android.view.KeyEvent)
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    111:111:public boolean isTracking(android.view.KeyEvent)
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    public abstract int normalizeMetaState(int)
    public abstract boolean isTracking(android.view.KeyEvent)
android.support.v4.view.KeyEventCompatEclair:
    22:22:KeyEventCompatEclair()
    28:28:public static boolean isTracking(android.view.KeyEvent)
android.support.v4.view.KeyEventCompatHoneycomb:
    24:24:KeyEventCompatHoneycomb()
android.support.v4.view.MenuCompat
android.support.v4.view.MenuCompat$BaseMenuVersionImpl
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuCompat$MenuVersionImpl
android.support.v4.view.MenuItemCompat
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl
android.support.v4.view.MenuItemCompat$MenuVersionImpl
android.support.v4.view.MenuItemCompatHoneycomb
android.support.v4.view.MotionEventCompat:
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    25:80:public MotionEventCompat()
android.support.v4.view.MotionEventCompatEclair:
    24:24:MotionEventCompatEclair()
android.support.v4.view.PagerAdapter:
    public static final int POSITION_UNCHANGED
    public static final int POSITION_NONE
    78:79:public PagerAdapter()
    276:277:public void notifyDataSetChanged()
    307:307:public java.lang.CharSequence getPageTitle(int)
android.support.v4.view.PagerTabStrip
android.support.v4.view.PagerTabStrip$1
android.support.v4.view.PagerTabStrip$2
android.support.v4.view.PagerTitleStrip
android.support.v4.view.PagerTitleStrip$1
android.support.v4.view.PagerTitleStrip$PageListener
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
android.support.v4.view.PagerTitleStripIcs
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform
android.support.v4.view.VelocityTrackerCompat:
    25:51:public VelocityTrackerCompat()
android.support.v4.view.VelocityTrackerCompatHoneycomb:
    24:24:VelocityTrackerCompatHoneycomb()
android.support.v4.view.ViewCompat:
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    private static final long FAKE_FRAME_TIME
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    32:367:public ViewCompat()
    432:432:public static boolean canScrollVertically(android.view.View,int)
    461:462:public static void setOverScrollMode(android.view.View,int)
    498:499:public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    531:532:public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    567:568:public static void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    582:583:public static void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
    594:594:public static boolean hasTransientState(android.view.View)
    605:606:public static void setHasTransientState(android.view.View,boolean)
    667:668:public static void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    683:683:public static int getImportantForAccessibility(android.view.View)
    699:700:public static void setImportantForAccessibility(android.view.View,int)
    717:717:public static boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    744:744:public static android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    818:818:public static int getLabelFor(android.view.View)
    829:830:public static void setLabelFor(android.view.View,int)
    897:898:public static void setLayoutDirection(android.view.View,int)
    909:909:public static android.view.ViewParent getParentForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    171:171:public boolean canScrollVertically(android.view.View,int)
    178:178:public void setOverScrollMode(android.view.View,int)
    181:181:public void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
    184:184:public void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    187:187:public void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    190:190:public void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    193:193:public boolean hasTransientState(android.view.View)
    197:197:public void setHasTransientState(android.view.View,boolean)
    208:209:public void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    214:214:public int getImportantForAccessibility(android.view.View)
    218:218:public void setImportantForAccessibility(android.view.View,int)
    220:220:public boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    223:223:public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    232:232:public int getLabelFor(android.view.View)
    236:236:public void setLabelFor(android.view.View,int)
    249:249:public void setLayoutDirection(android.view.View,int)
    253:253:public android.view.ViewParent getParentForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$GBViewCompatImpl:
    264:265:public void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    295:295:public boolean canScrollVertically(android.view.View,int)
    299:300:public void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    303:304:public void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    307:308:public void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    311:312:public void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
android.support.v4.view.ViewCompat$JBViewCompatImpl:
    318:318:public boolean hasTransientState(android.view.View)
    322:323:public void setHasTransientState(android.view.View,boolean)
    338:339:public void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    342:342:public int getImportantForAccessibility(android.view.View)
    346:347:public void setImportantForAccessibility(android.view.View,int)
    350:350:public boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    354:358:public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    363:363:public android.view.ViewParent getParentForAccessibility(android.view.View)
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    371:371:public int getLabelFor(android.view.View)
    376:377:public void setLabelFor(android.view.View,int)
    391:392:public void setLayoutDirection(android.view.View,int)
android.support.v4.view.ViewCompat$ViewCompatImpl:
    public abstract boolean canScrollVertically(android.view.View,int)
    public abstract void setOverScrollMode(android.view.View,int)
    public abstract void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public abstract void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public abstract void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    public abstract void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
    public abstract boolean hasTransientState(android.view.View)
    public abstract void setHasTransientState(android.view.View,boolean)
    public abstract void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    public abstract int getImportantForAccessibility(android.view.View)
    public abstract void setImportantForAccessibility(android.view.View,int)
    public abstract boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    public abstract android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public abstract int getLabelFor(android.view.View)
    public abstract void setLabelFor(android.view.View,int)
    public abstract void setLayoutDirection(android.view.View,int)
    public abstract android.view.ViewParent getParentForAccessibility(android.view.View)
android.support.v4.view.ViewCompatGingerbread:
    21:21:ViewCompatGingerbread()
    27:28:public static void setOverScrollMode(android.view.View,int)
android.support.v4.view.ViewCompatHC:
    23:23:ViewCompatHC()
android.support.v4.view.ViewCompatICS:
    27:27:ViewCompatICS()
    34:34:public static boolean canScrollVertically(android.view.View,int)
    38:39:public static void setAccessibilityDelegate(android.view.View,java.lang.Object)
    42:43:public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    46:47:public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    50:51:public static void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
android.support.v4.view.ViewCompatJB:
    26:26:public ViewCompatJB()
    29:29:public static boolean hasTransientState(android.view.View)
    33:34:public static void setHasTransientState(android.view.View,boolean)
    50:51:public static void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    54:54:public static int getImportantForAccessibility(android.view.View)
    58:59:public static void setImportantForAccessibility(android.view.View,int)
    62:62:public static boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    66:66:public static java.lang.Object getAccessibilityNodeProvider(android.view.View)
    70:70:public static android.view.ViewParent getParentForAccessibility(android.view.View)
android.support.v4.view.ViewCompatJellybeanMr1:
    25:25:ViewCompatJellybeanMr1()
    28:28:public static int getLabelFor(android.view.View)
    32:33:public static void setLabelFor(android.view.View,int)
    44:45:public static void setLayoutDirection(android.view.View,int)
android.support.v4.view.ViewConfigurationCompat
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl
android.support.v4.view.ViewConfigurationCompatFroyo
android.support.v4.view.ViewGroupCompat
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl
android.support.v4.view.ViewGroupCompatHC
android.support.v4.view.ViewGroupCompatIcs
android.support.v4.view.ViewPager:
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final boolean USE_CACHE
    private static final int DEFAULT_OFFSCREEN_PAGES
    private static final int MAX_SETTLE_DURATION
    private static final int MIN_DISTANCE_FOR_FLING
    private static final int DEFAULT_GUTTER_SIZE
    private static final int MIN_FLING_VELOCITY
    private boolean mIgnoreGutter
    private static final int INVALID_POINTER
    private static final int CLOSE_ENOUGH
    private long mFakeDragBeginTime
    private static final int DRAW_ORDER_DEFAULT
    private static final int DRAW_ORDER_FORWARD
    private static final int DRAW_ORDER_REVERSE
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
    342:344:public ViewPager(android.content.Context)
    347:349:public ViewPager(android.content.Context,android.util.AttributeSet)
    352:377:void initViewPager()
    605:617:public void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)
    651:653:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    775:776:void smoothScrollTo(int,int)
    2255:2271:public boolean beginFakeDrag()
    2281:2302:public void endFakeDrag()
    2312:2350:public void fakeDragBy(float)
    2362:2362:public boolean isFakeDragging()
    82:82:static synthetic void access$000(android.support.v4.view.ViewPager,int)
    82:82:static synthetic android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager)
    82:82:static synthetic int access$300(android.support.v4.view.ViewPager)
android.support.v4.view.ViewPager$3
android.support.v4.view.ViewPager$MyAccessibilityDelegate
android.support.v4.view.ViewPager$SimpleOnPageChangeListener
android.support.v4.view.accessibility.AccessibilityEventCompat
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl
android.support.v4.view.accessibility.AccessibilityEventCompatIcs
android.support.v4.view.accessibility.AccessibilityManagerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge
android.support.v4.view.accessibility.AccessibilityRecordCompat
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean
android.support.v4.widget.CursorAdapter
android.support.v4.widget.CursorAdapter$1
android.support.v4.widget.CursorAdapter$ChangeObserver
android.support.v4.widget.CursorAdapter$MyDataSetObserver
android.support.v4.widget.CursorFilter
android.support.v4.widget.CursorFilter$CursorFilterClient
android.support.v4.widget.DrawerLayout:
    private static final java.lang.String TAG
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int LOCK_MODE_UNLOCKED
    public static final int LOCK_MODE_LOCKED_CLOSED
    public static final int LOCK_MODE_LOCKED_OPEN
    private static final int MIN_DRAWER_MARGIN
    private static final int DEFAULT_SCRIM_COLOR
    private static final int PEEK_DELAY
    private static final int MIN_FLING_VELOCITY
    private static final boolean ALLOW_EDGE_LOCK
    213:214:public DrawerLayout(android.content.Context)
    217:218:public DrawerLayout(android.content.Context,android.util.AttributeSet)
    221:245:public DrawerLayout(android.content.Context,android.util.AttributeSet,int)
    261:271:public void setDrawerShadow(android.graphics.drawable.Drawable,int)
    281:282:public void setDrawerShadow(int,int)
    390:395:public void setDrawerLockMode(int,android.view.View)
    405:412:public int getDrawerLockMode(int)
    532:540:void moveDrawerToOffset(android.view.View,float)
    995:1004:public void openDrawer(int)
    1038:1047:public void closeDrawer(int)
    1060:1063:public boolean isDrawerOpen(android.view.View)
    1076:1080:public boolean isDrawerOpen(int)
    1107:1111:public boolean isDrawerVisible(int)
    1166:1177:void cancelChildViewTouch()
android.support.v4.widget.DrawerLayout$AccessibilityDelegate
android.support.v4.widget.DrawerLayout$LayoutParams:
    1466:1468:public DrawerLayout$LayoutParams(int,int,int)
android.support.v4.widget.DrawerLayout$SimpleDrawerListener
android.support.v4.widget.DrawerLayout$ViewDragCallback:
    1290:1292:public DrawerLayout$ViewDragCallback(android.support.v4.widget.DrawerLayout,int)
    1295:1296:public void setDragger(android.support.v4.widget.ViewDragHelper)
    1375:1397:private void peekDrawer()
    1280:1280:static synthetic void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)
android.support.v4.widget.DrawerLayout$ViewDragCallback$1
android.support.v4.widget.EdgeEffectCompat:
    132:134:public EdgeEffectCompat(android.content.Context)
    204:204:public boolean onAbsorb(int)
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    60:60:public java.lang.Object newEdgeEffect(android.content.Context)
    82:82:public boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    92:92:public java.lang.Object newEdgeEffect(android.content.Context)
    116:116:public boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    public abstract java.lang.Object newEdgeEffect(android.content.Context)
    public abstract boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.EdgeEffectCompatIcs:
    28:28:EdgeEffectCompatIcs()
    30:30:public static java.lang.Object newEdgeEffect(android.content.Context)
    57:58:public static boolean onAbsorb(java.lang.Object,int)
android.support.v4.widget.ResourceCursorAdapter
android.support.v4.widget.ScrollerCompat:
    251:251:public static android.support.v4.widget.ScrollerCompat create(android.content.Context)
    255:255:public static android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)
    258:260:ScrollerCompat(android.content.Context,android.view.animation.Interpolator)
    314:314:public float getCurrVelocity()
    341:342:public void startScroll(int,int,int,int)
    382:383:public void fling(int,int,int,int,int,int,int,int)
    410:412:public void fling(int,int,int,int,int,int,int,int,int,int)
    437:438:public void notifyHorizontalEdgeReached(int,int,int)
    454:455:public void notifyVerticalEdgeReached(int,int,int)
    471:471:public boolean isOverScrolled()
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    public abstract java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)
    public abstract float getCurrVelocity(java.lang.Object)
    public abstract void startScroll(java.lang.Object,int,int,int,int)
    public abstract void fling(java.lang.Object,int,int,int,int,int,int,int,int)
    public abstract void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
    public abstract void notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
    public abstract void notifyVerticalEdgeReached(java.lang.Object,int,int,int)
    public abstract boolean isOverScrolled(java.lang.Object)
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    58:58:public java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)
    79:79:public float getCurrVelocity(java.lang.Object)
    89:90:public void startScroll(java.lang.Object,int,int,int,int)
    101:102:public void fling(java.lang.Object,int,int,int,int,int,int,int,int)
    107:108:public void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
    119:119:public void notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
    124:124:public void notifyVerticalEdgeReached(java.lang.Object,int,int,int)
    129:129:public boolean isOverScrolled(java.lang.Object)
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    146:146:public java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)
    166:166:public float getCurrVelocity(java.lang.Object)
    176:177:public void startScroll(java.lang.Object,int,int,int,int)
    188:190:public void fling(java.lang.Object,int,int,int,int,int,int,int,int)
    195:197:public void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
    207:208:public void notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
    212:213:public void notifyVerticalEdgeReached(java.lang.Object,int,int,int)
    217:217:public boolean isOverScrolled(java.lang.Object)
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    234:234:public float getCurrVelocity(java.lang.Object)
android.support.v4.widget.ScrollerCompatGingerbread:
    24:24:ScrollerCompatGingerbread()
    26:26:public static java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)
    47:48:public static void startScroll(java.lang.Object,int,int,int,int)
    57:58:public static void fling(java.lang.Object,int,int,int,int,int,int,int,int)
    62:64:public static void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
    72:73:public static void notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
    76:77:public static void notifyVerticalEdgeReached(java.lang.Object,int,int,int)
    80:80:public static boolean isOverScrolled(java.lang.Object)
android.support.v4.widget.ScrollerCompatIcs
android.support.v4.widget.SearchViewCompat
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl
android.support.v4.widget.SearchViewCompatHoneycomb
android.support.v4.widget.SearchViewCompatHoneycomb$1
android.support.v4.widget.SearchViewCompatHoneycomb$2
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge
android.support.v4.widget.SearchViewCompatIcs
android.support.v4.widget.SearchViewCompatIcs$MySearchView
android.support.v4.widget.SimpleCursorAdapter
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
android.support.v4.widget.SimpleCursorAdapter$ViewBinder
android.support.v4.widget.SlidingPaneLayout:
    private static final java.lang.String TAG
    private static final int DEFAULT_OVERHANG_SIZE
    private static final int DEFAULT_FADE_COLOR
    private static final int MIN_FLING_VELOCITY
    246:247:public SlidingPaneLayout(android.content.Context)
    250:251:public SlidingPaneLayout(android.content.Context,android.util.AttributeSet)
    254:269:public SlidingPaneLayout(android.content.Context,android.util.AttributeSet,int)
    330:333:void dispatchOnPanelSlide(android.view.View)
    336:340:void dispatchOnPanelOpened(android.view.View)
    343:347:void dispatchOnPanelClosed(android.view.View)
    815:816:public void smoothSlideOpen()
    833:834:public void smoothSlideClosed()
    862:862:public boolean canSlide()
    876:889:private void onPanelDragged(int)
    1070:1089:protected boolean canScroll(android.view.View,boolean,int,int,int)
    90:90:static synthetic boolean access$100(android.support.v4.widget.SlidingPaneLayout)
    90:90:static synthetic android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout)
    90:90:static synthetic float access$300(android.support.v4.widget.SlidingPaneLayout)
    90:90:static synthetic android.view.View access$400(android.support.v4.widget.SlidingPaneLayout)
    90:90:static synthetic boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean)
    90:90:static synthetic void access$600(android.support.v4.widget.SlidingPaneLayout,int)
    90:90:static synthetic int access$700(android.support.v4.widget.SlidingPaneLayout)
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback
android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    1244:1245:public SlidingPaneLayout$LayoutParams(int,int)
    1256:1258:public SlidingPaneLayout$LayoutParams(android.support.v4.widget.SlidingPaneLayout$LayoutParams)
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    public abstract void onPanelSlide(android.view.View,float)
    public abstract void onPanelOpened(android.view.View)
    public abstract void onPanelClosed(android.view.View)
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
android.support.v4.widget.ViewDragHelper:
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
    347:347:public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)
    360:362:public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)
    373:392:private ViewDragHelper(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)
    401:402:public void setMinVelocity(float)
    412:412:public float getMinVelocity()
    437:438:public void setEdgeTrackingEnabled(int)
    483:483:public int getActivePointerId()
    690:701:public void flingCapturedView(int,int,int,int)
    908:927:protected boolean canScroll(android.view.View,boolean,int,int,int,int)
android.support.v4.widget.ViewDragHelper$2
android.support.v4.widget.ViewDragHelper$Callback:
    148:148:public ViewDragHelper$Callback()
aurelienribon.tweenengine.BaseTween:
    109:110:public java.lang.Object delay(float)
    133:134:public void pause()
    140:141:public void resume()
    152:156:public java.lang.Object repeat(int,float)
    169:173:public java.lang.Object repeatYoyo(int,float)
    184:185:public java.lang.Object setCallback(aurelienribon.tweenengine.TweenCallback)
    215:216:public java.lang.Object setCallbackTriggers(int)
    227:228:public java.lang.Object setUserData(java.lang.Object)
    240:240:public float getDelay()
    247:247:public float getDuration()
    254:254:public int getRepeatCount()
    261:261:public float getRepeatDelay()
    272:273:public float getFullDuration()
    280:280:public java.lang.Object getUserData()
    293:293:public int getStep()
    307:307:public boolean isStarted()
    316:316:public boolean isInitialized()
    333:333:public boolean isYoyo()
    340:340:public boolean isPaused()
    protected abstract boolean containsTarget(java.lang.Object)
    protected abstract boolean containsTarget(java.lang.Object,int)
    364:369:protected void forceToStart()
    372:377:protected void forceToEnd(float)
    392:393:protected void killTarget(java.lang.Object)
    396:397:protected void killTarget(java.lang.Object,int)
aurelienribon.tweenengine.Pool:
    34:35:public void clear()
    38:38:public int size()
aurelienribon.tweenengine.Timeline
aurelienribon.tweenengine.Timeline$1
aurelienribon.tweenengine.Timeline$2
aurelienribon.tweenengine.Timeline$3
aurelienribon.tweenengine.Timeline$Modes
aurelienribon.tweenengine.Tween:
    public static final int INFINITY
    98:99:public static void setCombinedAttributesLimit(int)
    106:107:public static void setWaypointsLimit(int)
    113:113:public static java.lang.String getVersion()
    134:134:public static int getPoolSize()
    169:169:public static aurelienribon.tweenengine.TweenAccessor getRegisteredAccessor(java.lang.Class)
    246:251:public static aurelienribon.tweenengine.Tween from(java.lang.Object,int,float)
    284:287:public static aurelienribon.tweenengine.Tween set(java.lang.Object,int)
    313:317:public static aurelienribon.tweenengine.Tween call(aurelienribon.tweenengine.TweenCallback)
    330:332:public static aurelienribon.tweenengine.Tween mark()
    456:458:public aurelienribon.tweenengine.Tween cast(java.lang.Class)
    475:476:public aurelienribon.tweenengine.Tween target(float)
    515:518:public aurelienribon.tweenengine.Tween target(float,float,float)
    535:537:public varargs aurelienribon.tweenengine.Tween target(float[])
    553:555:public aurelienribon.tweenengine.Tween targetRelative(float)
    572:575:public aurelienribon.tweenengine.Tween targetRelative(float,float)
    593:597:public aurelienribon.tweenengine.Tween targetRelative(float,float,float)
    613:619:public varargs aurelienribon.tweenengine.Tween targetRelative(float[])
    633:636:public aurelienribon.tweenengine.Tween waypoint(float)
    654:658:public aurelienribon.tweenengine.Tween waypoint(float,float)
    677:682:public aurelienribon.tweenengine.Tween waypoint(float,float,float)
    699:702:public varargs aurelienribon.tweenengine.Tween waypoint(float[])
    728:728:public java.lang.Object getTarget()
    735:735:public int getType()
    742:742:public aurelienribon.tweenengine.TweenEquation getEasing()
    752:752:public float[] getTargetValues()
    759:759:public int getCombinedAttributesCount()
    766:766:public aurelienribon.tweenengine.TweenAccessor getAccessor()
    773:773:public java.lang.Class getTargetClass()
    896:896:protected boolean containsTarget(java.lang.Object)
    901:901:protected boolean containsTarget(java.lang.Object,int)
    917:921:private void throwWaypointsLimitReached()
aurelienribon.tweenengine.TweenCallback:
    public static final int BEGIN
    public static final int START
    public static final int END
    public static final int COMPLETE
    public static final int BACK_BEGIN
    public static final int BACK_START
    public static final int BACK_END
    public static final int BACK_COMPLETE
    public static final int ANY_FORWARD
    public static final int ANY_BACKWARD
    public static final int ANY
aurelienribon.tweenengine.TweenEquation:
    26:26:public boolean isValueOf(java.lang.String)
aurelienribon.tweenengine.TweenEquations
aurelienribon.tweenengine.TweenManager:
    20:52:public TweenManager()
    34:35:public static void setAutoRemove(aurelienribon.tweenengine.BaseTween,boolean)
    44:45:public static void setAutoStart(aurelienribon.tweenengine.BaseTween,boolean)
    70:74:public boolean containsTarget(java.lang.Object)
    82:86:public boolean containsTarget(java.lang.Object,int)
    104:108:public void killTarget(java.lang.Object)
    116:120:public void killTarget(java.lang.Object,int)
    126:127:public void ensureCapacity(int)
    133:134:public void pause()
    140:141:public void resume()
    181:181:public int size()
    191:191:public int getRunningTweensCount()
    201:201:public int getRunningTimelinesCount()
    210:210:public java.util.List getObjects()
    218:224:private static int getTweensCount(java.util.List)
    228:235:private static int getTimelinesCount(java.util.List)
aurelienribon.tweenengine.TweenUtils
aurelienribon.tweenengine.equations.Back
aurelienribon.tweenengine.equations.Back$1
aurelienribon.tweenengine.equations.Back$2
aurelienribon.tweenengine.equations.Back$3
aurelienribon.tweenengine.equations.Bounce
aurelienribon.tweenengine.equations.Bounce$1
aurelienribon.tweenengine.equations.Bounce$2
aurelienribon.tweenengine.equations.Bounce$3
aurelienribon.tweenengine.equations.Circ
aurelienribon.tweenengine.equations.Circ$1
aurelienribon.tweenengine.equations.Circ$2
aurelienribon.tweenengine.equations.Circ$3
aurelienribon.tweenengine.equations.Cubic
aurelienribon.tweenengine.equations.Cubic$1
aurelienribon.tweenengine.equations.Cubic$2
aurelienribon.tweenengine.equations.Cubic$3
aurelienribon.tweenengine.equations.Elastic:
    private static final float PI
    76:78:public aurelienribon.tweenengine.equations.Elastic a(float)
    82:84:public aurelienribon.tweenengine.equations.Elastic p(float)
aurelienribon.tweenengine.equations.Expo
aurelienribon.tweenengine.equations.Expo$1
aurelienribon.tweenengine.equations.Expo$2
aurelienribon.tweenengine.equations.Expo$3
aurelienribon.tweenengine.equations.Quart
aurelienribon.tweenengine.equations.Quart$1
aurelienribon.tweenengine.equations.Quart$2
aurelienribon.tweenengine.equations.Quart$3
aurelienribon.tweenengine.equations.Quint
aurelienribon.tweenengine.equations.Quint$1
aurelienribon.tweenengine.equations.Quint$2
aurelienribon.tweenengine.equations.Quint$3
aurelienribon.tweenengine.equations.Sine:
    private static final float PI
aurelienribon.tweenengine.primitives.MutableFloat
aurelienribon.tweenengine.primitives.MutableInteger
box2dLight.ConeLight
box2dLight.DirectionalLight
box2dLight.Light
box2dLight.Light$1
box2dLight.LightMap
box2dLight.PointLight
box2dLight.PositionalLight
box2dLight.RayHandler
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.ApplicationListener getApplicationListener()
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
    public abstract com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Game
com.badlogic.gdx.Gdx:
    34:34:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract com.badlogic.gdx.graphics.GL10 getGL10()
    public abstract com.badlogic.gdx.graphics.GL11 getGL11()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Graphics$DisplayMode
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.Input:
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract boolean isButtonPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void setOnscreenKeyboardVisible(boolean)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract void setCatchBackKey(boolean)
    public abstract void setCatchMenuKey(boolean)
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract int getRotation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$TextInputListener
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer:
    30:33:public varargs InputMultiplexer(com.badlogic.gdx.InputProcessor[])
    36:37:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    40:41:public void removeProcessor(int)
    48:49:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    53:53:public int size()
    57:58:public void clear()
    61:62:public void setProcessors(com.badlogic.gdx.utils.Array)
    65:65:public com.badlogic.gdx.utils.Array getProcessors()
    106:108:public boolean mouseMoved(int,int)
    113:115:public boolean scrolled(int)
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract void openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest
com.badlogic.gdx.Net$HttpResponse
com.badlogic.gdx.Net$HttpResponseListener
com.badlogic.gdx.Net$Protocol
com.badlogic.gdx.Preferences
com.badlogic.gdx.Screen
com.badlogic.gdx.Version
com.badlogic.gdx.android.AndroidWallpaperListener
com.badlogic.gdx.assets.AssetDescriptor:
    28:29:public AssetDescriptor(java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetManager:
    71:72:public AssetManager()
    75:91:public AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    96:103:public synchronized java.lang.Object get(java.lang.String)
    110:116:public synchronized java.lang.Object get(java.lang.String,java.lang.Class)
    184:190:public synchronized boolean containsAsset(java.lang.Object)
    216:220:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    227:227:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    254:255:public synchronized void load(java.lang.String,java.lang.Class)
    305:306:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    311:321:private void disposeDependencies(java.lang.String)
    347:352:public synchronized boolean update(int)
    505:506:public synchronized void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader)
    514:520:public synchronized void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader)
    524:524:public synchronized int getLoadedAssets()
    529:529:public synchronized int getQueuedAssets()
    534:535:public synchronized float getProgress()
    541:542:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    600:600:public com.badlogic.gdx.utils.Logger getLogger()
    621:645:public synchronized java.lang.String getDiagnostics()
    650:650:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    655:655:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    660:660:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.AssetManager$1
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.AssetLoader:
    35:37:public AssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    31:32:public AsynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.BitmapFontLoader
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter
com.badlogic.gdx.assets.loaders.MusicLoader
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter
com.badlogic.gdx.assets.loaders.PixmapLoader
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter
com.badlogic.gdx.assets.loaders.SkinLoader
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter
com.badlogic.gdx.assets.loaders.SoundLoader
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    24:25:public SynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter
com.badlogic.gdx.assets.loaders.TextureLoader:
    44:45:public TextureLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.Music:
    public abstract void pause()
    public abstract boolean isLooping()
    public abstract void setVolume(float)
    public abstract float getVolume()
    public abstract float getPosition()
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float)
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void stop(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    172:174:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    191:209:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    270:270:public com.badlogic.gdx.ApplicationListener getApplicationListener()
    310:310:public long getJavaHeap()
    315:315:public long getNativeHeap()
    320:320:public com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    327:330:public com.badlogic.gdx.utils.Clipboard getClipboard()
    368:371:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    400:403:public void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    407:410:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidAudio:
    79:79:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    123:138:public com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    146:146:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidClipboard
com.badlogic.gdx.backends.android.AndroidDaydream
com.badlogic.gdx.backends.android.AndroidDaydream$1
com.badlogic.gdx.backends.android.AndroidFileHandle:
    53:55:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    81:92:public com.badlogic.gdx.files.FileHandle[] list()
    96:117:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    121:128:public boolean isDirectory()
    132:146:public boolean exists()
    166:166:public long lastModified()
com.badlogic.gdx.backends.android.AndroidFiles:
    33:36:public AndroidFiles(android.content.res.AssetManager)
    45:45:public com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    60:60:public com.badlogic.gdx.files.FileHandle external(java.lang.String)
    65:65:public com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    70:71:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    81:81:public boolean isExternalStorageAvailable()
    86:86:public java.lang.String getLocalStoragePath()
    91:91:public boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidGL10:
    36:37:public final void glActiveTexture(int)
    41:42:public final void glAlphaFunc(int,float)
    66:67:public final void glClearDepthf(float)
    71:72:public final void glClearStencil(int)
    81:82:public final void glColor4f(float,float,float,float)
    86:87:public final void glColorMask(boolean,boolean,boolean,boolean)
    103:104:public final void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    108:109:public final void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    113:114:public final void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    118:119:public final void glCullFace(int)
    128:129:public final void glDepthFunc(int)
    138:139:public final void glDepthRangef(float,float)
    173:174:public final void glFinish()
    178:179:public final void glFlush()
    183:184:public final void glFogf(int,float)
    188:189:public final void glFogfv(int,java.nio.FloatBuffer)
    193:194:public final void glFrontFace(int)
    198:199:public final void glFrustumf(float,float,float,float,float,float)
    208:208:public final int glGetError()
    223:224:public final void glHint(int,int)
    228:229:public final void glLightModelf(int,float)
    233:234:public final void glLightModelfv(int,java.nio.FloatBuffer)
    238:239:public final void glLightf(int,int,float)
    243:244:public final void glLightfv(int,int,java.nio.FloatBuffer)
    248:249:public final void glLineWidth(float)
    258:259:public final void glLoadMatrixf(java.nio.FloatBuffer)
    263:264:public final void glLogicOp(int)
    268:269:public final void glMaterialf(int,int,float)
    273:274:public final void glMaterialfv(int,int,java.nio.FloatBuffer)
    283:284:public final void glMultMatrixf(java.nio.FloatBuffer)
    288:289:public final void glMultiTexCoord4f(int,float,float,float,float)
    293:294:public final void glNormal3f(float,float,float)
    303:304:public final void glOrthof(float,float,float,float,float,float)
    318:319:public final void glPolygonOffset(float,float)
    323:324:public final void glPopMatrix()
    328:329:public final void glPushMatrix()
    333:334:public final void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    338:339:public final void glRotatef(float,float,float,float)
    343:344:public final void glSampleCoverage(float,boolean)
    348:349:public final void glScalef(float,float,float)
    353:354:public final void glScissor(int,int,int,int)
    358:359:public final void glShadeModel(int)
    363:364:public final void glStencilFunc(int,int,int)
    368:369:public final void glStencilMask(int)
    373:374:public final void glStencilOp(int,int,int)
    383:384:public final void glTexEnvf(int,int,float)
    388:389:public final void glTexEnvfv(int,int,java.nio.FloatBuffer)
    405:406:public final void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    410:411:public final void glTranslatef(float,float,float)
    420:421:public final void glViewport(int,int,int,int)
    425:426:public final void glDeleteTextures(int,int[],int)
    430:431:public final void glFogfv(int,float[],int)
    435:436:public final void glGenTextures(int,int[],int)
    440:441:public final void glGetIntegerv(int,int[],int)
    445:446:public final void glLightModelfv(int,float[],int)
    450:451:public final void glLightfv(int,int,float[],int)
    460:461:public final void glMaterialfv(int,int,float[],int)
    465:466:public final void glMultMatrixf(float[],int)
    470:471:public final void glTexEnvfv(int,int,float[],int)
    476:476:public void glPolygonMode(int,int)
com.badlogic.gdx.backends.android.AndroidGL11:
    55:56:public void glClipPlanef(int,java.nio.FloatBuffer)
    60:61:public void glColor4ub(byte,byte,byte,byte)
    75:76:public void glGetBooleanv(int,java.nio.IntBuffer)
    80:81:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    85:86:public void glGetClipPlanef(int,java.nio.FloatBuffer)
    90:91:public void glGetFloatv(int,java.nio.FloatBuffer)
    95:96:public void glGetLightfv(int,int,java.nio.FloatBuffer)
    100:101:public void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    105:106:public void glGetPointerv(int,java.nio.Buffer[])
    110:111:public void glGetTexEnviv(int,int,java.nio.IntBuffer)
    115:116:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    120:121:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    125:125:public boolean glIsBuffer(int)
    130:130:public boolean glIsEnabled(int)
    135:135:public boolean glIsTexture(int)
    140:141:public void glPointParameterf(int,float)
    145:146:public void glPointParameterfv(int,java.nio.FloatBuffer)
    150:151:public void glPointSizePointerOES(int,int,java.nio.Buffer)
    155:156:public void glTexEnvi(int,int,int)
    160:161:public void glTexEnviv(int,int,java.nio.IntBuffer)
    165:166:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    170:171:public void glTexParameteri(int,int,int)
    175:176:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    180:181:public void glClipPlanef(int,float[],int)
    185:186:public void glDeleteBuffers(int,int[],int)
    190:191:public void glGenBuffers(int,int[],int)
    195:196:public void glGetBooleanv(int,boolean[],int)
    200:201:public void glGetBufferParameteriv(int,int,int[],int)
    205:206:public void glGetClipPlanef(int,float[],int)
    210:211:public void glGetFloatv(int,float[],int)
    215:216:public void glGetLightfv(int,int,float[],int)
    220:221:public void glGetMaterialfv(int,int,float[],int)
    225:226:public void glGetTexEnviv(int,int,int[],int)
    230:231:public void glGetTexParameterfv(int,int,float[],int)
    235:236:public void glGetTexParameteriv(int,int,int[],int)
    240:241:public void glPointParameterfv(int,float[],int)
    245:246:public void glTexEnviv(int,int,int[],int)
    250:251:public void glTexParameterfv(int,int,float[],int)
    255:256:public void glTexParameteriv(int,int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glScissor(int,int,int,int)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    234:234:public com.badlogic.gdx.graphics.GL10 getGL10()
    240:240:public com.badlogic.gdx.graphics.GL11 getGL11()
    264:264:public boolean isGL11Available()
    274:274:private static boolean isPowerOfTwo(int)
    537:537:public com.badlogic.gdx.Graphics$GraphicsType getType()
    565:565:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    570:570:public float getPpiX()
    575:575:public float getPpiY()
    580:580:public float getPpcX()
    585:585:public float getPpcY()
    590:590:public float getDensity()
    595:595:public boolean supportsDisplayModeChange()
    600:600:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    605:605:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    610:610:public boolean setDisplayMode(int,int,boolean)
    626:628:public com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    633:633:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    638:638:public void setVSync(boolean)
    671:671:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidInput:
    int[] touchX
    int[] touchY
    private java.lang.String text
    private com.badlogic.gdx.Input$TextInputListener textListener
    private android.os.Handler handle
    private float azimuth
    private float pitch
    private float roll
    private float inclination
    private final com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard
    final float[] R
    final float[] orientation
    132:170:public AndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    184:184:public float getAccelerometerZ()
    189:231:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    234:266:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    270:272:public int getX()
    277:279:public int getY()
    284:286:public int getX(int)
    291:293:public int getY(int)
    314:316:public boolean isTouched()
    418:419:public void onTap(int,int)
    425:426:public void onDrop(int,int)
    429:447:protected void postTap(int,int)
    526:539:public void setOnscreenKeyboardVisible(boolean)
    543:544:public void setCatchBackKey(boolean)
    548:549:public void setCatchMenuKey(boolean)
    558:559:public void vibrate(long[],int)
    563:564:public void cancelVibrate()
    568:568:public boolean justTouched()
    573:576:public boolean isButtonPressed(int)
    583:589:private void updateOrientation()
    597:598:public void getRotationMatrix(float[])
    602:605:public float getAzimuth()
    610:613:public float getPitch()
    618:621:public float getRoll()
    672:672:public com.badlogic.gdx.InputProcessor getInputProcessor()
    687:695:public int getFreePointerIndex()
    699:709:public int lookUpPointerIndex(int)
    714:732:public int getRotation()
    743:743:public void setCursorCatched(boolean)
    747:747:public boolean isCursorCatched()
    752:752:public int getDeltaX()
    757:757:public int getDeltaX(int)
    762:762:public int getDeltaY()
    767:767:public int getDeltaY(int)
    772:772:public void setCursorPosition(int,int)
    780:781:public void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$1
com.badlogic.gdx.backends.android.AndroidInput$2
com.badlogic.gdx.backends.android.AndroidInput$3
com.badlogic.gdx.backends.android.AndroidInput$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$1$1
com.badlogic.gdx.backends.android.AndroidInput$3$2
com.badlogic.gdx.backends.android.AndroidInput$3$2$1
com.badlogic.gdx.backends.android.AndroidInput$3$3
com.badlogic.gdx.backends.android.AndroidInput$3$3$1
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$4$1
com.badlogic.gdx.backends.android.AndroidInput$4$1$1
com.badlogic.gdx.backends.android.AndroidInput$4$2
com.badlogic.gdx.backends.android.AndroidInput$4$2$1
com.badlogic.gdx.backends.android.AndroidInput$5
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidInputFactory:
    15:15:public AndroidInputFactory()
com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    22:29:public AndroidInputThreePlus(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    39:40:public void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler
com.badlogic.gdx.backends.android.AndroidMusic:
    56:56:public boolean isLooping()
    93:95:public void setVolume(float)
    99:99:public float getVolume()
    112:112:public float getPosition()
com.badlogic.gdx.backends.android.AndroidNet:
    77:78:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    82:82:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    87:87:public com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    92:103:public void openURI(java.lang.String)
com.badlogic.gdx.backends.android.AndroidNet$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidPreferences
com.badlogic.gdx.backends.android.AndroidServerSocket
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler
com.badlogic.gdx.backends.android.AndroidSocket
com.badlogic.gdx.backends.android.AndroidSound
com.badlogic.gdx.backends.android.AndroidTouchHandler:
    public abstract boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.InputProcessorLW
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper
com.badlogic.gdx.backends.android.surfaceview.GLException
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    56:60:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    222:228:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    231:262:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    169:172:public GLSurfaceViewCupcake(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    382:385:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    757:759:public int getRenderMode()
    822:825:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    163:169:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    172:207:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.files.FileHandle:
    57:60:public FileHandle(java.lang.String)
    65:68:public FileHandle(java.io.File)
    100:103:public java.lang.String nameWithoutExtension()
    109:112:public java.lang.String pathWithoutExtension()
    147:147:public java.io.BufferedInputStream read(int)
    153:153:public java.io.Reader reader()
    160:162:public java.io.Reader reader(java.lang.String)
    169:169:public java.io.BufferedReader reader(int)
    176:178:public java.io.BufferedReader reader(int,java.lang.String)
    185:185:public java.lang.String readString()
    191:214:public java.lang.String readString(java.lang.String)
    263:279:public int readBytes(byte[],int,int)
    287:295:public java.io.OutputStream write(boolean)
    305:327:public void write(java.io.InputStream,boolean)
    334:334:public java.io.Writer writer(boolean)
    343:355:public java.io.Writer writer(boolean,java.lang.String)
    364:365:public void writeString(java.lang.String,boolean)
    373:385:public void writeString(java.lang.String,boolean,java.lang.String)
    392:403:public void writeBytes(byte[],boolean)
    410:421:public void writeBytes(byte[],int,int,boolean)
    428:434:public com.badlogic.gdx.files.FileHandle[] list()
    442:458:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    465:466:public boolean isDirectory()
    481:482:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    498:501:public void mkdirs()
    506:513:public boolean exists()
    519:521:public boolean delete()
    527:529:public boolean deleteDirectory()
    535:536:public void emptyDirectory()
    541:544:public void emptyDirectory(boolean)
    555:569:public void copyTo(com.badlogic.gdx.files.FileHandle)
    575:579:public void moveTo(com.badlogic.gdx.files.FileHandle)
    604:604:public long lastModified()
    613:615:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    621:626:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    631:644:private static void emptyDirectory(java.io.File,boolean)
    647:648:private static boolean deleteDirectory(java.io.File)
    653:658:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    661:671:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle$1
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.files.package-info
com.badlogic.gdx.graphics.Camera:
    public abstract void update()
    public abstract void update(boolean)
    77:81:public void apply(com.badlogic.gdx.graphics.GL10)
    88:89:public void lookAt(float,float,float)
    94:95:public void lookAt(com.badlogic.gdx.math.Vector3)
    102:104:public void normalizeUp()
    114:116:public void rotate(float,float,float,float)
    124:126:public void rotate(com.badlogic.gdx.math.Vector3,float)
    133:135:public void rotate(com.badlogic.gdx.math.Matrix4)
    142:144:public void rotate(com.badlogic.gdx.math.Quaternion)
    153:159:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    165:167:public void transform(com.badlogic.gdx.math.Matrix4)
    180:181:public void translate(com.badlogic.gdx.math.Vector3)
    196:204:public void unproject(com.badlogic.gdx.math.Vector3,float,float,float,float)
    214:215:public void unproject(com.badlogic.gdx.math.Vector3)
    223:224:public void project(com.badlogic.gdx.math.Vector3)
    239:243:public void project(com.badlogic.gdx.math.Vector3,float,float,float,float)
    255:258:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    269:269:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    88:92:public com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
    100:104:public com.badlogic.gdx.graphics.Color mul(float)
    112:116:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    124:128:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    162:166:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    171:175:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    180:184:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    193:197:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    209:213:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    260:264:public static com.badlogic.gdx.graphics.Color valueOf(java.lang.String)
    276:278:public static float toFloatBits(int,int,int,int)
    297:297:public static int toIntBits(int,int,int,int)
    301:301:public static int alpha(float)
    305:305:public static int luminanceAlpha(float,float)
    309:309:public static int rgb565(float,float,float)
    313:313:public static int rgba4444(float,float,float,float)
    325:325:public static int rgb565(com.badlogic.gdx.graphics.Color)
    329:329:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    333:333:public static int rgb888(com.badlogic.gdx.graphics.Color)
    337:337:public static int rgba8888(com.badlogic.gdx.graphics.Color)
    346:349:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    357:361:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    369:372:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    380:384:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    390:390:public com.badlogic.gdx.graphics.Color tmp()
    395:395:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.FPSLogger
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glScissor(int,int,int,int)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.Mesh:
    114:126:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    141:166:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    203:227:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    238:238:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    251:292:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    300:301:public void setVertices(float[])
    316:317:public void getVertices(float[])
    323:324:public void getVertices(int,float[])
    331:332:public void getVertices(int,int,float[])
    341:355:public void getVertices(int,int,float[],int)
    370:371:public void setIndices(short[],int,int)
    376:377:public void getIndices(short[])
    383:390:public void getIndices(short[],int)
    404:404:public int getMaxVertices()
    409:409:public int getMaxIndices()
    414:414:public int getVertexSize()
    424:425:public void setAutoBind(boolean)
    478:479:public void render(int)
    623:623:public java.nio.FloatBuffer getVerticesBuffer()
    631:633:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    641:671:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    722:757:public void scale(float,float,float)
    765:766:public void transform(com.badlogic.gdx.math.Matrix4)
    770:782:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    795:829:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    841:924:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    932:932:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:104:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    133:134:public void setToOrtho(boolean)
    155:156:public void rotate(float)
    168:169:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    202:203:public void drawRectangle(int,int,int,int)
    211:212:public void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    280:280:public int getPixel(int,int)
    305:306:public void drawPixel(int,int)
    314:315:public void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    35:152:public PixmapIO()
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    55:59:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    62:62:private PixmapIO$CIM()
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.Texture:
    118:119:public Texture(java.lang.String)
    142:143:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    250:252:public void bind(int)
    261:266:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    300:300:public boolean isManaged()
    344:345:public static void setEnforcePotImages(boolean)
    424:425:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    440:440:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture$TextureFilter:
    86:86:public boolean isMipMap()
com.badlogic.gdx.graphics.TextureDict
com.badlogic.gdx.graphics.TextureRef
com.badlogic.gdx.graphics.VertexAttribute:
    51:51:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    55:55:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    59:59:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    63:63:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    67:67:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
com.badlogic.gdx.graphics.VertexAttributes:
    59:61:public int getOffset(int)
    67:70:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    81:83:public BitmapFont(boolean)
    92:93:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    99:100:public BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
    106:107:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    205:208:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    214:217:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int)
    233:236:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    243:246:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    254:257:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    263:263:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence)
    269:269:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    310:310:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence)
    316:329:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    335:335:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float)
    342:384:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    392:430:public void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray)
    436:466:public int computeVisibleGlyphs(java.lang.CharSequence,int,int,float)
    470:471:public void setColor(float)
    474:475:public void setColor(com.badlogic.gdx.graphics.Color)
    478:479:public void setColor(float,float,float,float)
    484:484:public com.badlogic.gdx.graphics.Color getColor()
    488:500:public void setScale(float,float)
    507:508:public void setScale(float)
    512:513:public void scale(float)
    516:516:public float getScaleX()
    520:520:public float getScaleY()
    529:529:public float getLineHeight()
    534:534:public float getSpaceWidth()
    539:539:public float getXHeight()
    545:545:public float getCapHeight()
    550:550:public float getAscent()
    556:556:public float getDescent()
    561:561:public boolean isFlipped()
    572:585:public void setFixedWidthGlyphs(java.lang.CharSequence)
    589:589:public boolean containsCharacter(char)
    594:596:public void setUseIntegerPositions(boolean)
    604:604:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    611:611:public boolean ownsTexture()
    621:622:public void setOwnsTexture(boolean)
    657:664:static boolean isWhitespace(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    867:867:public java.lang.String getImagePath()
    871:871:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    675:677:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    680:682:public void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    56:57:public void setPosition(float,float)
    63:75:public void translate(float,float)
    78:83:public void setColor(float)
    86:92:public void setColor(com.badlogic.gdx.graphics.Color)
    95:102:public void setColor(float,float,float,float)
    107:111:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    118:129:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    132:139:public com.badlogic.gdx.graphics.Color getColor()
    262:263:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    269:270:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    276:276:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    286:290:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int)
    296:297:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float)
    303:304:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    310:310:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    355:356:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    363:364:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    370:370:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    379:434:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    445:445:public float getX()
    450:450:public float getY()
    454:454:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont()
    465:465:public boolean usesIntegerPositions()
    469:469:public float[] getVertices()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    95:101:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    112:113:public void setPixel(int,int,int)
    116:116:public int getPixel(int,int)
    124:125:public void drawRect(int,int,int,int,int)
    128:129:public void drawCircle(int,int,int,int)
    132:133:public void fillRect(int,int,int,int,int)
    136:137:public void fillCircle(int,int,int,int)
    150:152:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    158:160:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    218:232:public java.lang.String getFormatString()
    private static native void setPixel(long,int,int,int)
    private static native int getPixel(long,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.graphics.g2d.PixmapPacker
com.badlogic.gdx.graphics.g2d.PixmapPacker$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    56:57:public Sprite(com.badlogic.gdx.graphics.Texture)
    63:64:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    79:84:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion)
    90:95:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    98:100:public Sprite(com.badlogic.gdx.graphics.g2d.Sprite)
    103:121:public void set(com.badlogic.gdx.graphics.g2d.Sprite)
    126:149:public void setBounds(float,float,float,float)
    189:190:public void setX(float)
    196:197:public void setY(float)
    202:211:public void translateX(float)
    216:225:public void translateY(float)
    273:278:public void setColor(float)
    288:290:public void setRotation(float)
    294:296:public void rotate(float)
    301:328:public void rotate90(boolean)
    337:340:public void setScale(float,float)
    344:347:public void scale(float)
    424:452:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    460:467:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    470:470:public float getX()
    474:474:public float getY()
    478:478:public float getWidth()
    482:482:public float getHeight()
    486:486:public float getOriginX()
    490:490:public float getOriginY()
    494:494:public float getRotation()
    498:498:public float getScaleX()
    502:502:public float getScaleY()
    508:515:public com.badlogic.gdx.graphics.Color getColor()
    536:539:public void setU(float)
    542:545:public void setV(float)
    548:551:public void setU2(float)
    554:557:public void setV2(float)
    581:602:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    148:149:public SpriteBatch(int,int)
    300:301:public void setColor(float)
    338:458:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    477:525:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    538:574:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    586:618:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    661:698:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    901:1027:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1104:1104:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1111:1111:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    1129:1132:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1173:1188:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    private final com.badlogic.gdx.utils.Array regions
    196:197:public TextureAtlas()
    202:203:public TextureAtlas(java.lang.String)
    207:208:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    213:214:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    217:218:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    222:223:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    226:228:public TextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    231:264:private void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    268:275:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    280:280:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    286:286:public com.badlogic.gdx.utils.Array getRegions()
    293:295:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String)
    302:308:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    314:319:public com.badlogic.gdx.utils.Array findRegions(java.lang.String)
    326:329:public com.badlogic.gdx.utils.Array createSprites()
    337:339:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    347:353:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    361:366:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    370:379:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    387:397:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    402:402:public java.util.Set getTextures()
    424:427:static java.lang.String readValue(java.io.BufferedReader)
    432:446:static int readTuple(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    public int index
    public java.lang.String name
    public int[] splits
    public int[] pads
    491:496:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    498:510:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    final com.badlogic.gdx.utils.Array pages
    final com.badlogic.gdx.utils.Array regions
    96:184:public TextureAtlas$TextureAtlasData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    187:187:public com.badlogic.gdx.utils.Array getPages()
    191:191:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    public com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page
    public java.lang.String name
    public float offsetX
    public float offsetY
    public int originalWidth
    public int originalHeight
    public boolean rotate
    public int left
    public int top
    public int width
    public int height
    public boolean flip
    public int[] splits
    public int[] pads
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    51:54:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    62:64:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    69:71:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    100:102:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    106:108:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    119:119:public float getU()
    123:125:public void setU(float)
    128:128:public float getV()
    132:134:public void setV(float)
    137:137:public float getU2()
    141:143:public void setU2(float)
    146:146:public float getV2()
    150:152:public void setV2(float)
    155:155:public int getRegionX()
    159:160:public void setRegionX(int)
    163:163:public int getRegionY()
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    235:252:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    264:265:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance
com.badlogic.gdx.graphics.g3d.AnimatedModelNode
com.badlogic.gdx.graphics.g3d.ModelLoaderHints
com.badlogic.gdx.graphics.g3d.ModelRenderer
com.badlogic.gdx.graphics.g3d.StillModelInstance
com.badlogic.gdx.graphics.g3d.StillModelNode
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1
com.badlogic.gdx.graphics.g3d.materials.Material
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1
com.badlogic.gdx.graphics.g3d.model.AnimatedModel
com.badlogic.gdx.graphics.g3d.model.Animation
com.badlogic.gdx.graphics.g3d.model.Model
com.badlogic.gdx.graphics.g3d.model.SubMesh
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh
com.badlogic.gdx.graphics.g3d.model.still.StillModel
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh
com.badlogic.gdx.graphics.glutils.ETC1:
    37:44:public ETC1()
    157:160:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    168:171:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    54:60:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    105:129:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    92:100:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    208:210:public void begin()
    214:216:public void end()
    219:223:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    255:255:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    260:260:public int getHeight()
    265:265:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    136:140:public void normal(float,float,float)
    146:149:public void texCoord(float,float)
    216:217:public void vertex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    49:51:public ImmediateModeRenderer20(boolean,boolean,int)
    90:93:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    105:109:public void texCoord(float,float)
    112:116:public void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:29:public MipMapGenerator()
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    171:172:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    308:311:public void setUniformi(int,int)
    320:324:public void setUniformi(java.lang.String,int,int)
    327:330:public void setUniformi(int,int,int)
    340:344:public void setUniformi(java.lang.String,int,int,int)
    347:350:public void setUniformi(int,int,int,int)
    361:365:public void setUniformi(java.lang.String,int,int,int,int)
    368:371:public void setUniformi(int,int,int,int,int)
    379:383:public void setUniformf(java.lang.String,float)
    386:389:public void setUniformf(int,float)
    398:402:public void setUniformf(java.lang.String,float,float)
    405:408:public void setUniformf(int,float,float)
    418:422:public void setUniformf(java.lang.String,float,float,float)
    425:428:public void setUniformf(int,float,float,float)
    439:443:public void setUniformf(java.lang.String,float,float,float,float)
    446:449:public void setUniformf(int,float,float,float,float)
    452:459:public void setUniform1fv(java.lang.String,float[],int,int)
    462:468:public void setUniform1fv(int,float[],int,int)
    471:478:public void setUniform2fv(java.lang.String,float[],int,int)
    481:487:public void setUniform2fv(int,float[],int,int)
    490:497:public void setUniform3fv(java.lang.String,float[],int,int)
    500:506:public void setUniform3fv(int,float[],int,int)
    509:516:public void setUniform4fv(java.lang.String,float[],int,int)
    519:525:public void setUniform4fv(int,float[],int,int)
    552:553:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    556:561:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    569:570:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    579:586:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    589:590:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    593:599:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    608:613:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    621:622:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    625:626:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    634:635:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    638:639:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    647:648:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    651:652:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    673:676:public void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
    697:700:public void setVertexAttribute(int,int,int,boolean,int,int)
    739:742:public void disableVertexAttribute(int)
    756:759:public void enableVertexAttribute(int)
    813:816:public void setAttributef(java.lang.String,float,float,float,float)
    819:824:private void ensureBufferCapacity(int)
    872:872:public boolean hasAttribute(java.lang.String)
    878:882:public int getAttributeType(java.lang.String)
    888:892:public int getAttributeLocation(java.lang.String)
    898:902:public int getAttributeSize(java.lang.String)
    908:908:public boolean hasUniform(java.lang.String)
    914:918:public int getUniformType(java.lang.String)
    924:928:public int getUniformLocation(java.lang.String)
    934:938:public int getUniformSize(java.lang.String)
    943:943:public java.lang.String[] getAttributes()
    948:948:public java.lang.String[] getUniforms()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    143:145:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    177:179:public void scale(float,float,float)
    245:293:public void curve(float,float,float,float,float,float,float,float,int)
    389:431:public void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    440:506:public void box(float,float,float,float,float,float)
    567:568:public void ellipse(float,float,float,float)
    571:601:public void ellipse(float,float,float,float,int)
    606:607:public void cone(float,float,float,float,float)
    610:667:public void cone(float,float,float,float,float,int)
    673:704:public void polygon(float[])
    710:733:public void polyline(float[])
    756:759:public void flush()
    763:763:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
com.badlogic.gdx.graphics.glutils.VertexArray:
    77:77:public java.nio.FloatBuffer getBuffer()
    88:88:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    115:115:public int getNumMaxVertices()
    121:122:public java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    123:123:public int getNumMaxVertices()
    129:130:public java.nio.FloatBuffer getBuffer()
    297:299:public void invalidate()
    326:326:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
    public abstract java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.input.GestureDetector:
    216:216:public boolean isLongPressed()
    222:223:public boolean isLongPressed(float)
    227:227:public boolean isPanning()
    231:234:public void reset()
    242:243:public void invalidateTapSquare()
    246:247:public void setTapSquareSize(int)
    251:252:public void setTapCountInterval(float)
    255:256:public void setLongPressSeconds(float)
    259:260:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$GestureAdapter
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    418:424:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.maps.ImageResolver
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.Map
com.badlogic.gdx.maps.MapLayer
com.badlogic.gdx.maps.MapLayers
com.badlogic.gdx.maps.MapObject
com.badlogic.gdx.maps.MapObjects
com.badlogic.gdx.maps.MapProperties
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.objects.CircleMapObject
com.badlogic.gdx.maps.objects.EllipseMapObject
com.badlogic.gdx.maps.objects.PolygonMapObject
com.badlogic.gdx.maps.objects.PolylineMapObject
com.badlogic.gdx.maps.objects.RectangleMapObject
com.badlogic.gdx.maps.objects.TextureMapObject
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TiledMap
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapTile
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode
com.badlogic.gdx.maps.tiled.TiledMapTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell
com.badlogic.gdx.maps.tiled.TiledMapTileSet
com.badlogic.gdx.maps.tiled.TiledMapTileSets
com.badlogic.gdx.maps.tiled.TmxMapLoader
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer2
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.EarClippingTriangulator:
    private static final int CONCAVE
    private static final int CONVEX
com.badlogic.gdx.math.Ellipse
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    97:100:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    109:112:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    120:132:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Interpolation
com.badlogic.gdx.math.Interpolation$1
com.badlogic.gdx.math.Interpolation$2
com.badlogic.gdx.math.Interpolation$3
com.badlogic.gdx.math.Interpolation$4
com.badlogic.gdx.math.Interpolation$5
com.badlogic.gdx.math.Interpolation$6
com.badlogic.gdx.math.Interpolation$7
com.badlogic.gdx.math.Interpolation$8
com.badlogic.gdx.math.Interpolation$Bounce
com.badlogic.gdx.math.Interpolation$BounceIn
com.badlogic.gdx.math.Interpolation$BounceOut
com.badlogic.gdx.math.Interpolation$Elastic
com.badlogic.gdx.math.Interpolation$ElasticIn
com.badlogic.gdx.math.Interpolation$ElasticOut
com.badlogic.gdx.math.Interpolation$Exp
com.badlogic.gdx.math.Interpolation$ExpIn
com.badlogic.gdx.math.Interpolation$ExpOut
com.badlogic.gdx.math.Interpolation$Pow
com.badlogic.gdx.math.Interpolation$PowIn
com.badlogic.gdx.math.Interpolation$PowOut
com.badlogic.gdx.math.Interpolation$Swing
com.badlogic.gdx.math.Interpolation$SwingIn
com.badlogic.gdx.math.Interpolation$SwingOut
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    public static final float PI2
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    27:88:public MathUtils()
    104:126:public static final float atan2(float,float)
    140:140:public static final int random(int,int)
    145:145:public static final boolean randomBoolean()
    150:150:public static final float random()
    155:155:public static final float random(float)
    160:160:public static final float random(float,float)
    184:186:public static int clamp(int,int,int)
    190:192:public static short clamp(short,short,short)
    196:198:public static float clamp(float,float,float)
    214:214:public static int floor(float)
    220:220:public static int floorPositive(float)
    226:226:public static int ceil(float)
    232:232:public static int ceilPositive(float)
    238:238:public static int round(float)
    243:243:public static int roundPositive(float)
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Sin:
    49:49:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    62:64:public Matrix4(com.badlogic.gdx.math.Matrix4)
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    103:103:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    114:140:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float)
    151:167:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    172:172:public com.badlogic.gdx.math.Matrix4 cpy()
    180:183:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    193:196:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    201:201:public float[] getValues()
    221:237:public com.badlogic.gdx.math.Matrix4 tra()
    268:327:public com.badlogic.gdx.math.Matrix4 inv()
    332:332:public float det()
    351:372:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
    399:400:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    449:452:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    476:480:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    490:497:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    512:519:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    530:534:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    545:549:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    557:557:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    569:569:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    578:579:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    587:591:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    601:605:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    659:664:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    678:680:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    685:701:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    705:708:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    712:715:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    719:722:public com.badlogic.gdx.math.Matrix4 scl(float)
    726:729:public void getTranslation(com.badlogic.gdx.math.Vector3)
    732:733:public void getRotation(com.badlogic.gdx.math.Quaternion)
    737:740:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1003:1003:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1041:1043:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1075:1075:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    1085:1103:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Polyline
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    54:56:public Quaternion(com.badlogic.gdx.math.Quaternion)
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    84:84:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    93:93:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public float len()
    117:138:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    164:167:public com.badlogic.gdx.math.Quaternion conjugate()
    175:182:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    264:264:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    291:291:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    317:354:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    362:364:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    376:378:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    387:425:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    444:444:public float dot(com.badlogic.gdx.math.Quaternion)
    451:455:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Rectangle
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    57:57:public com.badlogic.gdx.math.Vector2 cpy()
    62:62:public float len()
    67:67:public float len2()
    93:95:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    101:106:public com.badlogic.gdx.math.Vector2 nor()
    131:131:public float dot(com.badlogic.gdx.math.Vector2)
    138:140:public com.badlogic.gdx.math.Vector2 scl(float)
    145:145:public com.badlogic.gdx.math.Vector2 mul(float)
    151:153:public com.badlogic.gdx.math.Vector2 scl(float,float)
    158:158:public com.badlogic.gdx.math.Vector2 mul(float,float)
    164:166:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    171:171:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    175:175:public com.badlogic.gdx.math.Vector2 div(float)
    179:179:public com.badlogic.gdx.math.Vector2 div(float,float)
    183:183:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    198:200:public float dst(float,float)
    206:208:public float dst2(com.badlogic.gdx.math.Vector2)
    215:217:public float dst2(float,float)
    224:228:public com.badlogic.gdx.math.Vector2 limit(float)
    236:243:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    255:257:public com.badlogic.gdx.math.Vector2 sub(float,float)
    264:268:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    275:275:public float crs(com.badlogic.gdx.math.Vector2)
    283:283:public float crs(float,float)
    289:291:public float angle()
    297:299:public void setAngle(float)
    324:327:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    355:358:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    367:369:public boolean epsilonEquals(float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    69:71:public Vector3(com.badlogic.gdx.math.Vector3)
    76:78:public Vector3(float[])
    106:106:public com.badlogic.gdx.math.Vector3 set(float[])
    111:111:public com.badlogic.gdx.math.Vector3 cpy()
    138:138:com.badlogic.gdx.math.Vector3 tmp3()
    163:163:public com.badlogic.gdx.math.Vector3 add(float)
    188:188:public com.badlogic.gdx.math.Vector3 sub(float)
    200:200:public com.badlogic.gdx.math.Vector3 mul(float)
    207:207:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    212:212:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    221:221:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    226:226:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    231:231:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
    239:239:public com.badlogic.gdx.math.Vector3 div(float)
    245:245:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    251:251:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    261:261:public float len()
    266:266:public static float len2(float,float,float)
    277:277:public boolean idt(com.badlogic.gdx.math.Vector3)
    282:285:public static float dst(float,float,float,float,float,float)
    291:294:public float dst(com.badlogic.gdx.math.Vector3)
    299:302:public float dst(float,float,float)
    307:310:public static float dst2(float,float,float,float,float,float)
    317:320:public float dst2(com.badlogic.gdx.math.Vector3)
    329:332:public float dst2(float,float,float)
    346:346:public static float dot(float,float,float,float,float,float)
    361:361:public float dot(float,float,float)
    377:377:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    384:385:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4)
    393:393:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    402:404:public com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4)
    414:415:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    426:426:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    435:436:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    441:441:public boolean isUnit()
    446:446:public boolean isUnit(float)
    451:451:public boolean isZero()
    456:456:public boolean isZero(float)
    466:468:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    478:495:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    506:508:public com.badlogic.gdx.math.Vector3 limit(float)
    516:523:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    553:557:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    563:566:public boolean epsilonEquals(float,float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    61:65:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    79:81:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    94:96:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    105:107:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpStatus
com.badlogic.gdx.net.NetJavaImpl:
    99:192:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$1
com.badlogic.gdx.net.NetJavaImpl$1$1
com.badlogic.gdx.net.NetJavaImpl$1$2
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse
com.badlogic.gdx.net.ServerSocket
com.badlogic.gdx.net.ServerSocketHints
com.badlogic.gdx.net.Socket
com.badlogic.gdx.net.SocketHints
com.badlogic.gdx.physics.box2d.Body:
    128:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long)
    145:146:public void setTransform(com.badlogic.gdx.math.Vector2,float)
    154:155:public void setTransform(float,float,float)
    private native void jniSetTransform(long,float,float,float)
    212:215:public com.badlogic.gdx.math.Vector2 getWorldCenter()
    private native void jniGetWorldCenter(long,float[])
    229:232:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    244:245:public void setLinearVelocity(com.badlogic.gdx.math.Vector2)
    276:277:public void setAngularVelocity(float)
    private native void jniSetAngularVelocity(long,float)
    286:286:public float getAngularVelocity()
    private native float jniGetAngularVelocity(long)
    300:301:public void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
    311:312:public void applyForce(float,float,float,float,boolean)
    private native void jniApplyForce(long,float,float,float,float,boolean)
    322:323:public void applyForceToCenter(com.badlogic.gdx.math.Vector2,boolean)
    367:368:public void applyLinearImpulse(float,float,float,float,boolean)
    378:379:public void applyAngularImpulse(float,boolean)
    private native void jniApplyAngularImpulse(long,float,boolean)
    400:400:public float getInertia()
    private native float jniGetInertia(long)
    413:418:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    435:436:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    451:452:public void resetMassData()
    private native void jniResetMassData(long)
    465:468:public com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldPoint(long,float,float,float[])
    484:487:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    503:506:public com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalPoint(long,float,float,float[])
    522:525:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    541:544:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    560:563:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    575:575:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    595:595:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    615:616:public void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
    private native void jniSetType(long,int)
    654:655:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    664:664:public boolean isBullet()
    private native boolean jniIsBullet(long)
    674:675:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    684:684:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    721:722:public void setActive(boolean)
    private native void jniSetActive(long,boolean)
    741:742:public void setFixedRotation(boolean)
    private native void jniSetFixedRotation(long,boolean)
    751:751:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    779:779:public float getGravityScale()
    private native float jniGetGravityScale(long)
    789:790:public void setGravityScale(float)
    private native void jniSetGravityScale(long,float)
    799:799:public com.badlogic.gdx.physics.box2d.World getWorld()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    309:309:public boolean isDrawBodies()
    313:314:public void setDrawBodies(boolean)
    317:317:public boolean isDrawJoints()
    325:325:public boolean isDrawAABBs()
    329:330:public void setDrawAABBs(boolean)
    333:333:public boolean isDrawInactiveBodies()
    337:338:public void setDrawInactiveBodies(boolean)
    341:341:public boolean isDrawVelocities()
    345:346:public void setDrawVelocities(boolean)
    349:349:public boolean isDrawContacts()
    357:357:public static com.badlogic.gdx.math.Vector2 getAxis()
    361:362:public static void setAxis(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.ChainShape:
    42:42:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    48:55:public void createLoop(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateLoop(long,float[],int)
    69:76:public void createChain(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateChain(long,float[],int)
    89:90:public void setPrevVertex(com.badlogic.gdx.math.Vector2)
    94:95:public void setPrevVertex(float,float)
    private native void jniSetPrevVertex(long,float,float)
    104:105:public void setNextVertex(com.badlogic.gdx.math.Vector2)
    109:110:public void setNextVertex(float,float)
    private native void jniSetNextVertex(long,float,float)
    146:146:public boolean isLooped()
com.badlogic.gdx.physics.box2d.CircleShape:
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    66:67:public void setPosition(com.badlogic.gdx.math.Vector2)
    private native void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Contact:
    80:80:public boolean isTouching()
    private native boolean jniIsTouching(long)
    91:92:public void setEnabled(boolean)
    private native void jniSetEnabled(long,boolean)
    101:101:public boolean isEnabled()
    private native boolean jniIsEnabled(long)
    121:121:public com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
    private native long jniGetFixtureB(long)
    131:131:public int getChildIndexA()
    private native int jniGetChildIndexA(long)
    141:141:public int getChildIndexB()
    private native int jniGetChildIndexB(long)
    152:153:public void setFriction(float)
    private native void jniSetFriction(long,float)
    162:162:public float getFriction()
    private native float jniGetFriction(long)
    172:173:public void resetFriction()
    private native void jniResetFriction(long)
    183:184:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    193:193:public float getRestitution()
    private native float jniGetRestitution(long)
    203:204:public void ResetRestitution()
    private native void jniResetRestitution(long)
com.badlogic.gdx.physics.box2d.ContactFilter:
    public abstract boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.ContactImpulse:
    40:41:public float[] getNormalImpulses()
    private native void jniGetNormalImpulses(long,float[])
    51:52:public float[] getTangentImpulses()
    private native void jniGetTangentImpulses(long,float[])
    62:62:public int getCount()
    private native int jniGetCount(long)
com.badlogic.gdx.physics.box2d.ContactListener:
    public abstract void beginContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void endContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
    public abstract void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape:
    43:44:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    48:49:public void set(float,float,float,float)
    private native void jniSet(long,float,float,float,float)
    104:104:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture:
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    160:164:public com.badlogic.gdx.physics.box2d.Filter getFilterData()
    private native void jniGetFilterData(long,short[])
    178:179:public void refilter()
    private native void jniRefilter(long)
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Joint:
    124:127:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    139:139:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    153:153:public java.lang.Object getUserData()
    163:163:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef$JointType:
    33:33:public int getValue()
com.badlogic.gdx.physics.box2d.Manifold:
    40:44:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
    private native int jniGetType(long)
    53:53:public int getPointCount()
    private native int jniGetPointCount(long)
    62:64:public com.badlogic.gdx.math.Vector2 getLocalNormal()
    private native void jniGetLocalNormal(long,float[])
    74:76:public com.badlogic.gdx.math.Vector2 getLocalPoint()
    private native void jniGetLocalPoint(long,float[])
    86:97:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
    private native int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData:
    public float mass
    public float I
com.badlogic.gdx.physics.box2d.PolygonShape:
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    50:56:public void set(com.badlogic.gdx.math.Vector2[])
    61:62:public void set(float[])
    67:68:public void set(float[],int,int)
    private native void jniSet(long,float[],int,int)
com.badlogic.gdx.physics.box2d.QueryCallback:
    public abstract boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.RayCastCallback:
    public abstract float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Shape:
    public abstract com.badlogic.gdx.physics.box2d.Shape$Type getType()
    86:86:public int getChildCount()
    private native int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Transform:
    public static final int POS_X
    public static final int POS_Y
    public static final int COS
    public static final int SIN
    41:44:public Transform(com.badlogic.gdx.math.Vector2,float)
    65:68:public void setRotation(float)
    77:79:public void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World:
    251:251:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    256:258:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    621:622:public void clearForces()
    private native void jniClearForces(long)
    631:632:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    641:642:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    651:651:public int getProxyCount()
    private native int jniGetProxyCount(long)
    661:661:public int getBodyCount()
    private native int jniGetBodyCount(long)
    671:671:public int getJointCount()
    private native int jniGetJointcount(long)
    704:707:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    719:719:public boolean isLocked()
    private native boolean jniIsLocked(long)
    729:730:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    739:739:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    854:865:private boolean contactFilter(long,long)
    874:876:private void beginContact(long)
    879:881:private void endContact(long)
    884:887:private void preSolve(long,long)
    890:893:private void postSolve(long,long)
    896:899:private boolean reportFixture(long)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    918:920:public void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    private native void jniRayCast(long,float,float,float,float)
    934:941:private float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.WorldManifold:
    32:32:public com.badlogic.gdx.math.Vector2 getNormal()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    36:37:public void setLength(float)
    private native void jniSetLength(long,float)
    46:46:public float getLength()
    private native float jniGetLength(long)
    56:57:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    66:66:public float getFrequency()
    private native float jniGetFrequency(long)
    76:77:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    86:86:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    34:39:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    35:36:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    45:45:public float getMaxForce()
    private native float jniGetMaxForce(long)
    55:56:public void setMaxTorque(float)
    private native void jniSetMaxTorque(long,float)
    65:65:public float getMaxTorque()
    private native float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    32:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.GearJoint:
    39:40:public void setRatio(float)
    private native void jniSetRatio(long,float)
    49:49:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    51:54:public com.badlogic.gdx.math.Vector2 getTarget()
    private native void jniGetTarget(long,float[])
    65:66:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    75:75:public float getMaxForce()
    private native float jniGetMaxForce(long)
    85:86:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    95:95:public float getFrequency()
    private native float jniGetFrequency(long)
    105:106:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    115:115:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    67:68:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    77:77:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    87:87:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    97:98:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    107:107:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    117:118:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    127:128:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    137:137:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    147:148:public void setMaxMotorForce(float)
    private native void jniSetMaxMotorForce(long,float)
    157:157:public float getMotorForce(float)
    private native float jniGetMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    35:42:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    69:69:public float getLength1()
    private native float jniGetLength1(long)
    79:79:public float getLength2()
    private native float jniGetLength2(long)
    89:89:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    private static final float minPulleyLength
    36:46:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    38:38:public float getJointAngle()
    private native float jniGetJointAngle(long)
    48:48:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    58:58:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    68:69:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    78:78:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    88:88:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    99:100:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    109:109:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    119:120:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    129:130:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    139:139:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    149:150:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    159:159:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    35:40:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    38:38:public float getMaxLength()
    private native float jniGetMaxLength(long)
    48:49:public void setMaxLength(float)
    private native float jniSetMaxLength(long,float)
com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    35:35:public float getReferenceAngle()
    private native float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    31:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:private boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    67:68:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    77:78:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    87:87:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    97:98:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    106:106:public float getMaxMotorTorque()
    private native float jniGetMaxMotorTorque(long)
    116:116:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
    126:127:public void setSpringFrequencyHz(float)
    private native void jniSetSpringFrequencyHz(long,float)
    135:135:public float getSpringFrequencyHz()
    private native float jniGetSpringFrequencyHz(long)
    145:146:public void setSpringDampingRatio(float)
    private native void jniSetSpringDampingRatio(long,float)
    154:154:public float getSpringDampingRatio()
    private native float jniGetSpringDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    33:38:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Action
com.badlogic.gdx.scenes.scene2d.Actor
com.badlogic.gdx.scenes.scene2d.Event
com.badlogic.gdx.scenes.scene2d.EventListener
com.badlogic.gdx.scenes.scene2d.Group
com.badlogic.gdx.scenes.scene2d.InputEvent
com.badlogic.gdx.scenes.scene2d.InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputListener
com.badlogic.gdx.scenes.scene2d.InputListener$1
com.badlogic.gdx.scenes.scene2d.Stage
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus
com.badlogic.gdx.scenes.scene2d.Touchable
com.badlogic.gdx.scenes.scene2d.actions.Actions
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4
com.badlogic.gdx.scenes.scene2d.ui.Image
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1
com.badlogic.gdx.scenes.scene2d.ui.Skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$1
com.badlogic.gdx.scenes.scene2d.ui.Skin$2
com.badlogic.gdx.scenes.scene2d.ui.Skin$3
com.badlogic.gdx.scenes.scene2d.ui.Skin$4
com.badlogic.gdx.scenes.scene2d.ui.Skin$5
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table
com.badlogic.gdx.scenes.scene2d.ui.TableLayout
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField$1
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ClickListener
com.badlogic.gdx.scenes.scene2d.utils.Cullable
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable
com.badlogic.gdx.scenes.scene2d.utils.FocusListener
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Layout
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    60:63:public Array(boolean,int,java.lang.Class)
    67:68:public Array(java.lang.Class)
    74:77:public Array(com.badlogic.gdx.utils.Array)
    83:84:public Array(java.lang.Object[])
    91:94:public Array(boolean,java.lang.Object[])
    113:114:public void addAll(java.lang.Object[])
    130:132:public void set(int,java.lang.Object)
    135:144:public void insert(int,java.lang.Object)
    147:153:public void swap(int,int)
    175:183:public int indexOf(java.lang.Object,boolean)
    191:199:public int lastIndexOf(java.lang.Object,boolean)
    243:269:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    282:282:public java.lang.Object peek()
    287:288:public java.lang.Object first()
    301:302:public void shrink()
    308:310:public java.lang.Object[] ensureCapacity(int)
    325:326:public void sort()
    330:331:public void sort(java.util.Comparator)
    334:340:public void reverse()
    343:349:public void shuffle()
    374:378:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    384:388:public void truncate(int)
    392:393:public java.lang.Object random()
    397:397:public java.lang.Object[] toArray()
    401:403:public java.lang.Object[] toArray(java.lang.Class)
    437:445:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterable
com.badlogic.gdx.utils.Array$ArrayIterator:
    473:474:public void reset()
com.badlogic.gdx.utils.ArrayMap
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    32:32:public BufferUtils()
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.Clipboard
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray
com.badlogic.gdx.utils.FloatArray
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    19:19:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries1
    private com.badlogic.gdx.utils.IntMap$Entries entries2
    private com.badlogic.gdx.utils.IntMap$Values values1
    private com.badlogic.gdx.utils.IntMap$Values values2
    private com.badlogic.gdx.utils.IntMap$Keys keys1
    private com.badlogic.gdx.utils.IntMap$Keys keys2
    57:58:public IntMap()
    63:64:public IntMap(int)
    68:84:public IntMap(int,float)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    289:298:public java.lang.Object get(int)
    302:311:public java.lang.Object get(int,java.lang.Object)
    315:318:private java.lang.Object getStash(int,java.lang.Object)
    387:397:public void clear()
    404:419:public boolean containsValue(java.lang.Object,boolean)
    447:462:public int findKey(java.lang.Object,boolean,int)
    468:470:public void ensureCapacity(int)
    541:554:public com.badlogic.gdx.utils.IntMap$Entries entries()
    560:573:public com.badlogic.gdx.utils.IntMap$Values values()
    579:592:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.Json
com.badlogic.gdx.utils.Json$FieldMetadata
com.badlogic.gdx.utils.Json$ReadOnlySerializer
com.badlogic.gdx.utils.Json$Serializable
com.badlogic.gdx.utils.Json$Serializer
com.badlogic.gdx.utils.JsonReader
com.badlogic.gdx.utils.JsonValue
com.badlogic.gdx.utils.JsonValue$1
com.badlogic.gdx.utils.JsonValue$ValueType
com.badlogic.gdx.utils.JsonWriter
com.badlogic.gdx.utils.JsonWriter$1
com.badlogic.gdx.utils.JsonWriter$JsonObject
com.badlogic.gdx.utils.JsonWriter$OutputType
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    39:42:public Logger(java.lang.String,int)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Entries entries1
    private com.badlogic.gdx.utils.LongMap$Entries entries2
    private com.badlogic.gdx.utils.LongMap$Keys keys1
    private com.badlogic.gdx.utils.LongMap$Keys keys2
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    301:310:public java.lang.Object get(long,java.lang.Object)
    386:396:public void clear()
    401:416:public boolean containsValue(java.lang.Object,boolean)
    420:429:public boolean containsKey(long)
    433:436:private boolean containsKeyStash(long)
    444:459:public long findKey(java.lang.Object,boolean,long)
    465:467:public void ensureCapacity(int)
    533:546:public com.badlogic.gdx.utils.LongMap$Entries entries()
    571:584:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$Values:
    709:712:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    29:29:public static int floatToRawIntBits(float)
    43:43:public static float intBitsToFloat(int)
    47:47:public static long doubleToLongBits(double)
    51:51:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    361:367:void removeStashIndex(int)
    380:383:public boolean containsValue(int)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(int)
    418:420:public void ensureCapacity(int)
    486:499:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    505:518:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    524:537:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectMap$Values values1
    private com.badlogic.gdx.utils.ObjectMap$Values values2
    60:61:public ObjectMap(int)
    154:156:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    299:308:public java.lang.Object get(java.lang.Object,java.lang.Object)
    312:315:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    391:403:public boolean containsValue(java.lang.Object,boolean)
    431:443:public java.lang.Object findKey(java.lang.Object,boolean)
    449:451:public void ensureCapacity(int)
    536:549:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.ObjectMap$Values
com.badlogic.gdx.utils.OrderedMap
com.badlogic.gdx.utils.OrderedMap$1
com.badlogic.gdx.utils.OrderedMap$2
com.badlogic.gdx.utils.OrderedMap$3
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.Pool:
    31:32:public Pool()
    36:37:public Pool(int)
    67:75:public void freeAll(com.badlogic.gdx.utils.Array)
    79:80:public void clear()
    84:84:public int getFree()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.ReflectionPool
com.badlogic.gdx.utils.Scaling
com.badlogic.gdx.utils.Scaling$1
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.SerializationException
com.badlogic.gdx.utils.SharedLibraryLoader:
    66:68:public SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.ShortArray
com.badlogic.gdx.utils.SnapshotArray
com.badlogic.gdx.utils.Sort
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StreamUtils
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    106:112:final void append0(char[])
    116:129:final void append0(char[],int,int)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    432:443:public void setLength(int)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    693:694:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    782:783:public com.badlogic.gdx.utils.StringBuilder append(float)
    793:794:public com.badlogic.gdx.utils.StringBuilder append(double)
    828:829:public com.badlogic.gdx.utils.StringBuilder append(char[])
    842:843:public com.badlogic.gdx.utils.StringBuilder append(char[],int,int)
    861:865:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    883:887:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    897:898:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    909:910:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    920:921:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    933:934:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    946:947:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    959:960:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    972:973:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    985:986:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    998:999:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1011:1012:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1023:1024:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1036:1037:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1052:1053:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1066:1067:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1083:1084:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1097:1098:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1105:1106:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort
com.badlogic.gdx.utils.TimeUtils:
    21:21:public TimeUtils()
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    66:67:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    76:77:public void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float)
    93:96:public void stop()
    109:114:public void clear()
    154:155:public static void post(com.badlogic.gdx.utils.Timer$Task)
    166:167:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float)
    172:173:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer$Task:
    public abstract void run()
com.badlogic.gdx.utils.XmlReader
com.badlogic.gdx.utils.XmlReader$Element
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.esotericsoftware.tablelayout.BaseTableLayout
com.esotericsoftware.tablelayout.BaseTableLayout$Debug
com.esotericsoftware.tablelayout.Cell
com.esotericsoftware.tablelayout.Toolkit
com.esotericsoftware.tablelayout.Value
com.esotericsoftware.tablelayout.Value$1
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$2
com.esotericsoftware.tablelayout.Value$3
com.esotericsoftware.tablelayout.Value$4
com.esotericsoftware.tablelayout.Value$5
com.esotericsoftware.tablelayout.Value$6
com.esotericsoftware.tablelayout.Value$7
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$CellValue
com.esotericsoftware.tablelayout.Value$FixedValue
com.esotericsoftware.tablelayout.Value$TableValue
hevs.androiddemoselector.AboutDialog:
    26:27:public static void setContext(android.content.Context)
hevs.androiddemoselector.BuildConfig:
    public static final boolean DEBUG
hevs.androiddemoselector.GDXEventHandler:
    17:25:public void showAboutBox()
    30:30:public void showToast()
hevs.gdx2d.components.audio.MusicPlayer:
    33:39:public void setVolume(float)
    45:46:public void play()
hevs.gdx2d.components.audio.SoundPlayer:
    protected float volume
    21:24:public SoundPlayer(java.lang.String)
    31:37:public void setVolume(float)
    43:44:public void play()
    50:51:public void stop()
    57:58:public void loop()
hevs.gdx2d.components.geometry.Point:
    public int x
    public int y
    8:11:public Point(int,int)
hevs.gdx2d.components.geometry.Vector2D:
    27:29:public double distanceTo(hevs.gdx2d.components.geometry.Vector2D)
    36:38:public double norm()
hevs.gdx2d.components.graphics.Polygon:
    58:58:public float[] getVertices()
    73:74:public boolean contains(hevs.gdx2d.components.geometry.Vector2D)
hevs.gdx2d.components.physics.AbstractPhysicsObject:
    162:162:public void collision(hevs.gdx2d.components.physics.AbstractPhysicsObject,float)
    169:169:public final void beginContact(com.badlogic.gdx.physics.box2d.Contact)
    173:173:public final void endContact(com.badlogic.gdx.physics.box2d.Contact)
    177:184:public final void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
    188:188:public final void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
hevs.gdx2d.components.physics.PhysicsBox:
    14:15:public PhysicsBox(java.lang.String,com.badlogic.gdx.math.Vector2,int,int)
    18:19:public PhysicsBox(java.lang.String,com.badlogic.gdx.math.Vector2,int,int,float)
hevs.gdx2d.components.physics.PhysicsCircle:
    18:19:public PhysicsCircle(java.lang.String,com.badlogic.gdx.math.Vector2,int,float,float,float)
hevs.gdx2d.components.physics.utils.PhysicsConstants:
    public static final float STEP_SIZE
    public static final int VELOCITY_IT
    public static final int POSITION_IT
hevs.gdx2d.demos.accelerometer.DemoAccelerometer:
    private final double SMOOTHING
    56:57:public DemoAccelerometer(boolean)
    60:61:public static void main(java.lang.String[])
hevs.gdx2d.demos.complex_shapes.DemoComplexShapes:
    private final int N_SHAPES
    174:175:public DemoComplexShapes(boolean)
    178:179:public static void main(java.lang.String[])
hevs.gdx2d.demos.gestures.DemoGesture:
    23:29:public DemoGesture(boolean)
    68:69:public static void main(java.lang.String[])
hevs.gdx2d.demos.image_drawing.DemoMirrorImage:
    float counter
    23:24:public DemoMirrorImage(boolean)
    59:60:public static void main(java.lang.String[])
hevs.gdx2d.demos.image_drawing.DemoRotatingImage:
    13:14:public DemoRotatingImage(boolean)
    50:51:public static void main(java.lang.String[])
hevs.gdx2d.demos.image_drawing.DemoSimpleImage:
    24:25:public DemoSimpleImage(boolean)
    52:53:public static void main(java.lang.String[])
hevs.gdx2d.demos.music.DemoMusicPlay:
    63:64:public DemoMusicPlay(boolean)
    67:68:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.DemoPhysicsBalls:
    static final int BOX_VELOCITY_ITERATIONS
    static final int BOX_POSITION_ITERATIONS
    private final double SMOOTHING
    45:46:public DemoPhysicsBalls(boolean)
    173:174:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.DemoPhysicsMouse:
    38:39:public DemoPhysicsMouse(boolean)
    42:43:public DemoPhysicsMouse(boolean,int,int)
    173:174:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.DemoPhysicsMouse$1:
    final synthetic hevs.gdx2d.demos.physics.DemoPhysicsMouse this$0
    1:97:DemoPhysicsMouse$1(hevs.gdx2d.demos.physics.DemoPhysicsMouse)
    102:106:public boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
hevs.gdx2d.demos.physics.DemoSimplePhysics:
    28:29:public DemoSimplePhysics(boolean)
    75:76:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.collisions.BumpyBall:
    30:34:public void collision(hevs.gdx2d.components.physics.AbstractPhysicsObject,float)
hevs.gdx2d.demos.physics.collisions.DemoCollisionListener:
    83:84:public DemoCollisionListener(boolean)
    87:88:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.particle.DemoParticlePhysics:
    public final int MAX_AGE
    132:133:public DemoParticlePhysics(boolean)
    136:137:public DemoParticlePhysics(boolean,int,int)
    140:141:public static void main(java.lang.String[])
hevs.gdx2d.demos.physics.rocket.DemoPhysicsRocket:
    30:31:DemoPhysicsRocket(boolean)
    96:97:public static void main(java.lang.String[])
hevs.gdx2d.demos.scrolling.DemoScrolling:
    33:34:public DemoScrolling(boolean)
    107:108:public static void main(java.lang.String[])
hevs.gdx2d.demos.simple.DemoSimpleAnimation:
    18:19:public DemoSimpleAnimation(boolean)
    48:49:public static void main(java.lang.String[])
hevs.gdx2d.demos.simple.DemoSimpleShapes:
    20:21:public DemoSimpleShapes(boolean)
    54:55:public static void main(java.lang.String[])
hevs.gdx2d.demos.tween.BallAccessor:
    public static final int POSITION_X
    public static final int POSITION_Y
    public static final int POSITION_XY
hevs.gdx2d.demos.tween.DemoTween:
    77:78:public DemoTween(boolean)
    81:82:public static void main(java.lang.String[])
hevs.gdx2d.lib.Game2D:
    protected int angle
    protected static final int LOGIC_UPDATES_PER_SECOND
    57:64:public void setLogicRefreshRate(int)
    71:73:public Game2D(hevs.gdx2d.lib.PortableApplication)
hevs.gdx2d.lib.Game2D$2:
    178:178:public boolean scrolled(int)
    183:183:public boolean mouseMoved(int,int)
hevs.gdx2d.lib.GdxGraphics:
    115:123:public void drawSchoolLogoUpperRight(boolean)
    127:128:public void setPenWidth(float)
    145:152:public void drawRectangle(float,float,float,float,float)
    185:190:public void setPixel(float,float)
    199:204:public void setPixel(float,float,com.badlogic.gdx.graphics.Color)
    207:212:public void clearPixel(float,float)
    215:220:public void drawLine(float,float,float,float)
    223:225:public void drawLine(float,float,float,float,com.badlogic.gdx.graphics.Color)
    242:244:public void drawCircle(float,float,float,com.badlogic.gdx.graphics.Color)
    282:288:public void drawString(float,float,java.lang.String,com.badlogic.gdx.graphics.Color,float)
    297:298:public void drawBackground(hevs.gdx2d.components.bitmaps.BitmapImage,float,float)
    329:338:public void drawTexture(com.badlogic.gdx.graphics.Texture,int,int,boolean)
    383:388:public void drawPolygon(hevs.gdx2d.components.graphics.Polygon)
    416:418:public void moveCamera(float,float)
    424:425:public void resetCamera()
hevs.gdx2d.lib.PortableApplication:
    protected boolean onAndroid
    private hevs.gdx2d.lib.Game2D theGame
    192:215:public PortableApplication(boolean,int,int)
    222:223:public PortableApplication(boolean)
hevs.gdx2d.lib.Version:
    public static final java.lang.String version
hevs.gdx2d.lib.interfaces.AndroidResolver:
    public abstract void showAboutBox()
    public abstract void showToast()
hevs.gdx2d.lib.interfaces.GameInterface:
    public abstract void onPause()
    public abstract void onDispose()
    public abstract void onResume()
    public abstract void onGameLogicUpdate()
hevs.gdx2d.lib.interfaces.KeyboardInterface:
    public abstract void onKeyDown(int)
    public abstract void onKeyUp(int)
hevs.gdx2d.lib.interfaces.TouchInterface:
    public abstract void onClick(int,int,int)
    public abstract void onDrag(int,int)
    public abstract void onRelease(int,int,int)
hevs.gdx2d.lib.perf_tests.Benchmarker:
    12:12:public static void main(java.lang.String[])
hevs.gdx2d.lib.utils.GraphicTimer:
    29:42:public void sync(int)
hevs.gdx2d.lib.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    23:24:public static void setLogLevel(int)
shaders.DiffuseShader
shaders.Gaussian
shaders.LightShader
shaders.ShadowShader
shaders.WithoutShadowShader
